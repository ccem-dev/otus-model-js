!function(){"use strict";angular.module("otusjs.activity",[])}(),function(){"use strict";angular.module("otusjs.metadata",[])}(),function(){"use strict";angular.module("otusjs.misc",[])}(),function(){"use strict";angular.module("otusjs.model.navigation",[])}(),function(){"use strict";angular.module("otusjs.survey",[])}(),function(){"use strict";angular.module("otusjs.surveyItem",[])}(),function(){"use strict";angular.module("otusjs.validation",[])}(),function(){"use strict";angular.module("otusjs",["otusjs.survey","otusjs.activity","otusjs.surveyItem","otusjs.metadata","otusjs.misc","otusjs.model.navigation","otusjs.validation","utils"])}(),function(){"use strict";function ModelFacadeService(SurveyItemFactory,LabelFactory,UnitFactory,SurveyFactory,SurveyIdentityFactory,MetadataGroupFactory){function getSurveyItemFactory(){return SurveyItemFactory}function getLabelFactory(){return LabelFactory}function getUnitFactory(){return UnitFactory}function getSurveyFactory(){return SurveyFactory}function getSurveyIdentityFactory(){return SurveyIdentityFactory}function getMetadataGroupFactory(){return MetadataGroupFactory}var self=this;self.getSurveyItemFactory=getSurveyItemFactory,self.getLabelFactory=getLabelFactory,self.getUnitFactory=getUnitFactory,self.getSurveyFactory=getSurveyFactory,self.getSurveyIdentityFactory=getSurveyIdentityFactory,self.getMetadataGroupFactory=getMetadataGroupFactory}angular.module("otusjs").service("ModelFacadeService",ModelFacadeService),ModelFacadeService.$inject=["SurveyItemFactory","LabelFactory","UnitFactory","SurveyFactory","SurveyIdentityFactory","MetadataGroupFactory"]}(),function(){"use strict";function ActivityParticipantDataFactory(){function create(participant){return new ActivityParticipantData(participant)}var self=this;return self.create=create,self}function ActivityParticipantData(participant){function toJson(){var json={};return json.objectType=self.objectType,json.recruitmentNumber=self.recruitmentNumber,json.name=self.name,json.fieldCenter=self.fieldCenter,JSON.stringify(json)}var self=this;self.objectType="ActivityParticipantData",self.recruitmentNumber=participant.recruitmentNumber,self.name=participant.name,self.fieldCenter=participant.fieldCenter,self.toJson=toJson}angular.module("otusjs.activity").factory("ActivityParticipantDataFactory",ActivityParticipantDataFactory)}(),function(){"use strict";function ActivityStatusFactory(){function createCreatedStatus(user){return new ActivityStatus("CREATED",user)}function createInitializedOfflineStatus(user){return new ActivityStatus("INITIALIZED_OFFLINE",user)}function createInitializedOnlineStatus(user){return new ActivityStatus("INITIALIZED_ONLINE",user)}function createOpenedStatus(user){return new ActivityStatus("OPENED",user)}function createSavedStatus(user){return new ActivityStatus("SAVED",user)}function createFinalizedStatus(user){return new ActivityStatus("FINALIZED",user)}var self=this;return self.createCreatedStatus=createCreatedStatus,self.createInitializedOfflineStatus=createInitializedOfflineStatus,self.createInitializedOnlineStatus=createInitializedOnlineStatus,self.createOpenedStatus=createOpenedStatus,self.createSavedStatus=createSavedStatus,self.createFinalizedStatus=createFinalizedStatus,self}function ActivityStatus(name,user){function toJson(){var json={};return json.objectType=self.objectType,json.name=self.name,json.date=self.date,json.user=self.user.toJson(),JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"").replace(/ ":/g,'":')}var self=this;self.objectType="ActivityStatus",self.name=name,self.date=Date.now(),self.user=user,self.toJson=toJson}angular.module("otusjs.activity").factory("ActivityStatusFactory",ActivityStatusFactory)}(),function(){"use strict";function ActivitySurveyFactory(StatusHistoryManagerService,FillingManagerService){function create(category,group,templateOID,user){return StatusHistoryManagerService.newCreatedRegistry(user),new ActivitySurvey(category,group,templateOID,FillingManagerService,StatusHistoryManagerService)}var self=this;return self.create=create,self}function ActivitySurvey(category,group,templateOID,FillingManagerService,StatusHistoryManagerService){function toJson(){var json={};return json.objectType=self.objectType,json.activityID=self.activityID,json.category=self.category,json.group=self.group,json.templateOID=self.templateOID,json.fillContainer=self.fillContainer,json.statusHistory=self.statusHistory,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"").replace(/ ":/g,'":')}var self=this;self.objectType="Activity",self.activityID=1,self.category=category,self.group=group,self.templateOID=templateOID,self.fillContainer=FillingManagerService,self.statusHistory=StatusHistoryManagerService,self.toJson=toJson}angular.module("otusjs.activity").factory("ActivitySurveyFactory",ActivitySurveyFactory),ActivitySurveyFactory.$inject=["StatusHistoryManagerService","FillingManagerService"]}(),function(){"use strict";function ActivityUserFactory(){function create(name,email){return new ActivityUser(name,email)}var self=this;return self.create=create,self}function ActivityUser(name,email){function toJson(){var json={};return json.objectType=self.objectType,json.name=self.name,json.email=self.email,JSON.stringify(json)}var self=this;self.objectType="ActivityUser",self.name=name,self.email=email,self.toJson=toJson}angular.module("otusjs.activity").factory("ActivityUserFactory",ActivityUserFactory)}(),function(){"use strict";function AnswerFillFactory(){function create(value){return new AnswerFill(value)}var self=this;return self.create=create,self}function AnswerFill(value){function isFilled(){return!!self.value}function toJson(){var json={};return json.objectType=self.objectType,json.value=self.value,JSON.stringify(json)}var self=this;self.objectType="AnswerFill",self.value=void 0===value?null:value,self.isFilled=isFilled,self.toJson=toJson}angular.module("otusjs.activity").factory("AnswerFillFactory",AnswerFillFactory)}(),function(){"use strict";function InterviewFactory(InterviewerFactory){function create(user){var interviewer=InterviewerFactory.create(user);return new Interview(interviewer)}var self=this;return self.create=create,self}function Interview(interviewer){function toJson(){var json={};return json.objectType=self.objectType,json.date=self.date,json.interviewer=self.interviewer.toJson(),JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"").replace(/ ":/g,'":')}var self=this;self.objectType="Interview",self.date=Date.now(),self.interviewer=interviewer,self.toJson=toJson}angular.module("otusjs.activity").factory("InterviewFactory",InterviewFactory),InterviewFactory.$inject=["InterviewerFactory"]}(),function(){"use strict";function InterviewerFactory(){function create(userData){return new Interviewer(userData)}var self=this;return self.create=create,self}function Interviewer(userData){function toJson(){var json={};return json.objectType=self.objectType,json.name=self.name,json.email=self.email,JSON.stringify(json)}var self=this;self.objectType="Interviewer",self.name=userData.name,self.email=userData.email,self.toJson=toJson}angular.module("otusjs.activity").factory("InterviewerFactory",InterviewerFactory)}(),function(){"use strict";function MetadataFillFactory(){function create(value){return new MetadataFill(value)}var self=this;return self.create=create,self}function MetadataFill(value){function isFilled(){return!!self.value}function toJson(){var json={};return json.objectType=self.objectType,json.value=self.value,JSON.stringify(json)}var self=this;self.objectType="MetadataFill",self.value=void 0===value?null:value,self.isFilled=isFilled,self.toJson=toJson}angular.module("otusjs.activity").factory("MetadataFillFactory",MetadataFillFactory)}(),function(){"use strict";function QuestionFillFactory(AnswerFillFactory,MetadataFillFactory){function create(questionID,answer,metadata,comment){var answerFill=AnswerFillFactory.create(answer),metadataFill=MetadataFillFactory.create(metadata);return new QuestionFill(questionID,answerFill,metadataFill,comment)}var self=this;return self.create=create,self}function QuestionFill(questionID,answer,metadata,comment){function isFilled(){return self.answer.isFilled()||self.metadata.isFilled()||!!self.comment}function toJson(){var json={};return json.objectType=self.objectType,json.questionID=self.questionID,json.answer=self.answer.toJson(),json.metadata=self.metadata.toJson(),json.comment=self.comment,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"").replace(/ ":/g,'":')}var self=this;self.objectType="QuestionFill",self.questionID=questionID,self.answer=answer,self.metadata=metadata,self.comment=void 0===comment?"":comment,self.isFilled=isFilled,self.toJson=toJson}angular.module("otusjs.activity").factory("QuestionFillFactory",QuestionFillFactory),QuestionFillFactory.$inject=["AnswerFillFactory","MetadataFillFactory"]}(),function(){"use strict";function ActivityFacadeService(AnswerFillFactory,MetadataFillFactory,QuestionFillFactory,ActivitySurveyFactory){function createActivity(category,group,templateOID,user){self.activitySurvey=ActivitySurveyFactory.create(category,group,templateOID,user)}function openActivitySurvey(){self.activitySurvey.statusHistory.newOpenedRegistry()}function initializeActivitySurvey(){self.activitySurvey.statusHistory.newInitializedOnlineRegistry()}function createQuestionFill(questionID,answer,metadata,comment){var question=QuestionFillFactory.create(questionID,answer,metadata,comment);return self.activitySurvey.fillContainer.updateFilling(question),question}var self=this;self.activitySurvey=null,self.createActivity=createActivity,self.createQuestionFill=createQuestionFill,self.openActivitySurvey=openActivitySurvey,self.initializeActivitySurvey=initializeActivitySurvey}angular.module("otusjs.activity").service("ActivityFacadeService",ActivityFacadeService),ActivityFacadeService.$inject=["AnswerFillFactory","MetadataFillFactory","QuestionFillFactory","ActivitySurveyFactory"]}(),function(){"use strict";function FillingManagerService(){function init(){fillingList=[]}function listSize(){return fillingList.length}function getFillingIndex(questionID){var result=_searchByID(questionID);return result?result.index:null}function existsFillingTo(questionID){return!!_searchByID(questionID)}function searchFillingByID(questionID){var result=_searchByID(questionID);return result?result.filling:null}function updateFilling(filling){return filling.isFilled()?existsFillingTo(filling.questionID)?_replaceFilling(filling):void _add(filling):_removeFilling(filling.questionID)}function _searchByID(questionID){var result;return fillingList.forEach(function(filling,index){filling.questionID===questionID&&(result={},result.filling=filling,result.index=index)}),result}function _add(filling){fillingList.push(filling)}function _replaceFilling(filling){var result=_searchByID(filling.questionID);return void 0!==result?fillingList.splice(result.index,1,filling)[0]:null}function _removeFilling(questionID){var result=_searchByID(questionID);return void 0!==result?fillingList.splice(result.index,1)[0]:null}var self=this,fillingList=[];self.init=init,self.listSize=listSize,self.getFillingIndex=getFillingIndex,self.existsFillingTo=existsFillingTo,self.searchFillingByID=searchFillingByID,self.updateFilling=updateFilling,init()}angular.module("otusjs.activity").service("FillingManagerService",FillingManagerService)}(),function(){"use strict";function StatusHistoryManagerService(ActivityStatusFactory){function init(){history=[]}function getHistory(){return history}function newCreatedRegistry(user){history.push(ActivityStatusFactory.createCreatedStatus(user))}function newInitializedOfflineRegistry(user){history.push(ActivityStatusFactory.createInitializedOfflineStatus(user))}function newInitializedOnlineRegistry(user){history.push(ActivityStatusFactory.createInitializedOnlineStatus(user))}function newOpenedRegistry(user){history.push(ActivityStatusFactory.createOpenedStatus(user))}function newSavedRegistry(user){history.push(ActivityStatusFactory.createSavedStatus(user))}function newFinalizedRegistry(user){history.push(ActivityStatusFactory.createFinalizedStatus(user))}function historySize(){return history.length}function toJson(){return JSON.stringify(history)}var history,self=this;self.init=init,self.historySize=historySize,self.getHistory=getHistory,self.newCreatedRegistry=newCreatedRegistry,self.newInitializedOfflineRegistry=newInitializedOfflineRegistry,self.newInitializedOnlineRegistry=newInitializedOnlineRegistry,self.newOpenedRegistry=newOpenedRegistry,self.newSavedRegistry=newSavedRegistry,self.newFinalizedRegistry=newFinalizedRegistry,self.toJson=toJson,init()}angular.module("otusjs.activity").service("StatusHistoryManagerService",StatusHistoryManagerService),StatusHistoryManagerService.$inject=["ActivityStatusFactory"]}(),function(){"use strict";function AddMetadataAnswerService(){function execute(item){return item.metadata.createOption()}var self=this;self.execute=execute}angular.module("otusjs.metadata").service("AddMetadataAnswerService",AddMetadataAnswerService)}(),function(){"use strict";function RemoveMetadataOptionService(){function execute(item){item.metadata.removeLastOption()}var self=this;self.execute=execute}angular.module("otusjs.metadata").service("RemoveMetadataOptionService",RemoveMetadataOptionService)}(),function(){"use strict";function AddAnswerOptionService(){function execute(item){return item.createOption()}var self=this;self.execute=execute}angular.module("otusjs.surveyItem").service("AddAnswerOptionService",AddAnswerOptionService)}(),function(){"use strict";function AddSurveyItemService(){function execute(itemType,survey){return survey.addItem(itemType)}var self=this;self.execute=execute}angular.module("otusjs.surveyItem").service("AddSurveyItemService",AddSurveyItemService)}(),function(){"use strict";function RemoveAnswerOptionService(){function execute(item){item.removeLastOption()}var self=this;self.execute=execute}angular.module("otusjs.surveyItem").service("RemoveAnswerOptionService",RemoveAnswerOptionService)}(),function(){"use strict";function RemoveSurveyItemService(){function execute(item,survey){survey.removeItem(item.templateID)}var self=this;self.execute=execute}angular.module("otusjs.surveyItem").service("RemoveSurveyItemService",RemoveSurveyItemService)}(),function(){"use strict";function UpdateSurveyItemCustomID(){function execute(item,id){item.customID=id}var self=this;self.execute=execute}angular.module("otusjs.surveyItem").service("UpdateSurveyItemCustomID",UpdateSurveyItemCustomID)}(),function(){"use strict";function AddFillingRulesService(){function execute(item,validatorType){return item.fillingRules.createOption(validatorType)}var self=this;self.execute=execute}angular.module("otusjs.validation").service("AddFillingRulesService",AddFillingRulesService)}(),function(){"use strict";function RemoveFillingRulesWorkService(){function execute(item,fillingRuleType){item.fillingRules.removeFillingRules(fillingRuleType)}var self=this;self.execute=execute}angular.module("otusjs.validation").service("RemoveFillingRulesWorkService",RemoveFillingRulesWorkService)}(),function(){"use strict";function MetadataAnswerFactory(LabelFactory){function create(value){return new MetadataAnswer(value,LabelFactory)}var self=this;return self.create=create,self}function MetadataAnswer(value,LabelFactory){var self=this;self.extends="StudioObject",self.objectType="MetadataAnswer",self.dataType="Integer",self.value=value,self.label={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()}}angular.module("otusjs.metadata").factory("MetadataAnswerFactory",MetadataAnswerFactory),MetadataAnswerFactory.$inject=["LabelFactory"]}(),function(){"use strict";function MetadataGroupFactory(MetadataAnswerFactory){function create(){return new MetadataGroup(MetadataAnswerFactory)}var self=this;return self.create=create,self}function MetadataGroup(MetadataAnswerFactory){function getOptionListSize(){return self.options.length}function getOptionByValue(value){return self.options[value-1]}function createOption(){var option=MetadataAnswerFactory.create(self.options.length+1);return self.options.push(option),option}function removeOption(value){self.options.splice(value-1,1),reorderOptionValues()}function removeLastOption(){self.options.splice(-1,1)}function reorderOptionValues(){self.options.forEach(function(option,index){option.value=++index})}var self=this;self.extents="StudioObject",self.objectType="MetadataGroup",self.options=[],self.getOptionListSize=getOptionListSize,self.getOptionByValue=getOptionByValue,self.createOption=createOption,self.removeOption=removeOption,self.removeLastOption=removeLastOption}angular.module("otusjs.metadata").factory("MetadataGroupFactory",MetadataGroupFactory),MetadataGroupFactory.$inject=["MetadataAnswerFactory"]}(),function(){"use strict";function LabelFactory(){function create(){return new Label}var self=this;return self.create=create,self}function Label(){Object.defineProperty(this,"extends",{value:"StudioObject",writable:!1,enumerable:!0}),Object.defineProperty(this,"objectType",{value:"Label",writable:!1,enumerable:!0}),Object.defineProperty(this,"oid",{value:"",writable:!1,enumerable:!0}),Object.defineProperty(this,"plainText",{value:"",writable:!0,enumerable:!0}),Object.defineProperty(this,"formattedText",{value:"",writable:!0,enumerable:!0})}angular.module("otusjs.misc").factory("LabelFactory",LabelFactory)}(),function(){"use strict";function UnitFactory(){function create(){return new Unit}var self=this;return self.create=create,self}function Unit(){Object.defineProperty(this,"extends",{value:"StudioObject",writable:!1,enumerable:!0}),Object.defineProperty(this,"objectType",{value:"Unit",writable:!1,enumerable:!0}),Object.defineProperty(this,"oid",{value:"",writable:!1,enumerable:!0}),Object.defineProperty(this,"plainText",{value:"",writable:!0,enumerable:!0}),Object.defineProperty(this,"formattedText",{value:"",writable:!0,enumerable:!0})}angular.module("otusjs.misc").factory("UnitFactory",UnitFactory)}(),function(){function service(RouteFactory,RouteConditionFactory,RuleFactory){function addRoute(routeData,navigation){var route=RouteFactory.create(routeData.name,routeData.origin,routeData.destination);return navigation.addRoute(route),route}function addRouteCondition(conditionName,route){var routeCondition=RouteConditionFactory.create(conditionName);return route.addCondition(routeCondition),routeCondition}function addConditionRule(ruleData,routeCondition){var newRule=RuleFactory.create(ruleData.when,ruleData.operator,ruleData.answer);return routeCondition.addRule(newRule),newRule}function removeRoute(){routeData.parentNavigation.removeRoute(routeData.name)}function removeRouteCondition(){}function removeConditionRule(){route.conditionSet[0].removeRule(rule)}var self=this;self.addRoute=addRoute,self.addRouteCondition=addRouteCondition,self.addConditionRule=addConditionRule,self.removeRoute=removeRoute,self.removeRouteCondition=removeRouteCondition,self.removeConditionRule=removeConditionRule}angular.module("otusjs.model.navigation").service("otusjs.model.navigation.NavigationApiService",service),service.$inject=["otusjs.model.navigation.RouteFactory","otusjs.model.navigation.RouteConditionFactory","otusjs.model.navigation.RuleFactory"]}(),function(){"use strict";function service(){function createErrorType(name){function E(message){this.message=message}return E.prototype=Object.create(Error.prototype),E.prototype.name=name,E.prototype.constructor=E,E}var self=this;self.InvalidStateError=createErrorType("InvalidStateError")}angular.module("otusjs.model.navigation").service("otusjs.model.navigation.ExceptionService",service)}(),function(){"use strict";function factory(RouteFactory,ExceptionService){function create(origin,destination){var navigation=new Navigation(origin,ExceptionService);if(destination){var defaultRoute=RouteFactory.create("1",navigation.origin,destination);navigation.addRoute(defaultRoute)}return navigation}function fromJson(json){if("string"==typeof json)var jsonObj=JSON.parse(json);else if("object"==typeof json)var jsonObj=JSON.parse(JSON.stringify(json));var navigation=new Navigation(jsonObj.origin);return jsonObj.routes.forEach(function(route){var newRoute=RouteFactory.fromJson(JSON.stringify(route));navigation.addRoute(newRoute)}),navigation}var self=this;return self.create=create,self.fromJson=fromJson,self}function Navigation(origin,ExceptionService){function listRoutes(){var clone=[];return self.routes.forEach(function(route){clone.push(route)}),clone}function getRoute(routeData){var routeToReturn=null;return self.routes.some(function(route){return route.name===routeData.name&&(routeToReturn=route,!0)}),routeToReturn}function addRoute(route){self.routes.push(route)}function removeRoute(name){var routeToRemove=self.routes.filter(function(route){return route.name===name}),indexToRemove=self.routes.indexOf(routeToRemove[0]);return indexToRemove>-1&&self.routes.splice(indexToRemove,1),routeToRemove[0]}function updateRoute(route){self.routes.forEach(function(currentRoute,index){currentRoute.name===route.name&&(self.routes[index]=route)})}function hasRoute(routeData){return routeData.name?self.routes.some(function(route){return route.name===routeData.name}):routeData.origin&&routeData.destination?self.routes.some(function(route){return route.origin===routeData.origin&&route.destination===routeData.destination}):void 0}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.origin=self.origin,json.routes=[],self.routes.forEach(function(route){json.routes.push(route.toJson())}),JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents="StudioObject",self.objectType="Navigation",self.origin=origin,self.routes=[],self.listRoutes=listRoutes,self.getRoute=getRoute,self.addRoute=addRoute,self.removeRoute=removeRoute,self.updateRoute=updateRoute,self.hasRoute=hasRoute,self.toJson=toJson}angular.module("otusjs.model.navigation").factory("otusjs.model.navigation.NavigationFactory",factory),factory.$inject=["otusjs.model.navigation.RouteFactory","otusjs.model.navigation.ExceptionService"]}(),function(){"use strict";function factory(RuleFactory){function create(name){return new RouteCondition(name)}function fromJson(json){var jsonObj=JSON.parse(json),condition=new RouteCondition(jsonObj.name);return jsonObj.rules.forEach(function(rule){var newRule=RuleFactory.fromJson(JSON.stringify(rule));condition.addRule(newRule)}),condition}var self=this;return self.create=create,self.fromJson=fromJson,self}function RouteCondition(conditionName){function listRules(){var clone=[];return self.rules.forEach(function(rule){clone.push(rule)}),clone}function addRule(rule){var ruleNotExist=self.rules.indexOf(rule)===-1;ruleNotExist&&self.rules.push(rule)}function removeRule(rule){var indexToRemove=self.rules.indexOf(rule);self.rules.splice(indexToRemove,1)}function toJson(){var json={};return json.extents="StudioObject",json.objectType="RouteCondition",json.name=self.name,json.rules=[],self.rules.forEach(function(rule){json.rules.push(rule.toJson())}),JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents="StudioObject",self.objectType="RouteCondition",self.name=conditionName,self.rules=[],self.listRules=listRules,self.addRule=addRule,self.removeRule=removeRule,self.toJson=toJson}angular.module("otusjs.model.navigation").factory("otusjs.model.navigation.RouteConditionFactory",factory),factory.$inject=["otusjs.model.navigation.RuleFactory"]}(),function(){"use strict";function factory(RouteConditionFactory){function create(origin,destination){return new Route(origin,destination)}function fromJson(json){var jsonObj=JSON.parse(json),route=new Route(jsonObj.origin,jsonObj.destination);return jsonObj.conditionSet.forEach(function(condition){condition=condition instanceof Object?JSON.stringify(condition):condition;var newCondition=RouteConditionFactory.fromJson(condition);route.addCondition(newCondition)}),route}var self=this;return self.create=create,self.fromJson=fromJson,self}function Route(routeOrigin,routeDestination){function getConditionSet(){var clone=[];return self.conditionSet.forEach(function(condition){clone.push(condition)}),clone}function getConditionSetSize(){return self.conditionSet.length}function addCondition(condition){condition.name+=getConditionSetSize()+1,self.conditionSet.push(condition)}function removeCondition(name){var conditionToRemove=self.conditionSet.filter(function(condition){return condition.name===name}),indexToRemove=self.conditionSet.indexOf(conditionToRemove[0]);return indexToRemove>-1&&self.conditionSet.splice(indexToRemove,1),conditionToRemove[0]}function toJson(){var json={};if(json.extents=self.extents,json.objectType=self.objectType,json.name=self.name,json.origin=self.origin,json.destination=self.destination,json.index=self.index,json.conditionSet=[],self.conditionSet)for(var conditionName in self.conditionSet)json.conditionSet[conditionName]=self.conditionSet[conditionName].toJson();return JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents="StudioObject",self.objectType="Route",self.name=routeOrigin+"_"+routeDestination,self.origin=routeOrigin,self.destination=routeDestination,self.conditionSet=[],self.getConditionSet=getConditionSet,self.addCondition=addCondition,self.removeCondition=removeCondition,self.getConditionSetSize=getConditionSetSize,self.toJson=toJson}angular.module("otusjs.model.navigation").factory("otusjs.model.navigation.RouteFactory",factory),factory.$inject=["otusjs.model.navigation.RouteConditionFactory"]}(),function(){"use strict";function factory(){function create(when,operator,answer){return new Rule(when,operator,answer)}function fromJson(json){var jsonObj=JSON.parse(json),rule=new Rule(jsonObj.when,jsonObj.operator,jsonObj.answer);return rule}var self=this;return self.create=create,self.fromJson=fromJson,self}function Rule(when,operator,answer){function within(arrayValues){defineAnswer("within",arrayValues)}function notEqual(value){defineAnswer("notEqual",value)}function equal(value){defineAnswer("equal",value)}function greater(value){defineAnswer("greater",value)}function greaterEqual(value){defineAnswer("greaterEqual",value)}function lower(value){defineAnswer("lower",value)}function lowerEqual(value){defineAnswer("lowerEqual",value)}function between(start,end){Array.isArray(start)?defineAnswer("between",start):defineAnswer("between",[start,end])}function contains(value){defineAnswer("contains",value)}function defineAnswer(operator,value){self.answer={},self.answer=value}function toJson(){var json={};return json.when=self.when,json.operator=self.operator,json.answer=self.answer,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents="StudioObject",self.objectType="Rule",self.when=when,self.answer=answer||{},self.operator=operator,self.within=within,self.equal=equal,self.notEqual=notEqual,self.greater=greater,self.greaterEqual=greaterEqual,self.lower=lower,self.lowerEqual=lowerEqual,self.between=between,self.contains=contains,self.toJson=toJson}angular.module("otusjs.model.navigation").factory("otusjs.model.navigation.RuleFactory",factory)}(),function(){"use strict";function service(NavigationFactory){function init(){navigationList=[]}function loadJsonData(data){init(),data.forEach(function(navigationData){navigationList.push(NavigationFactory.fromJson(navigationData))})}function manageNavigation(navigationToManage){navigationList=navigationToManage}function getNavigationList(){return navigationList}function getNavigationListSize(){return navigationList.length}function getNavigationByOrigin(origin){var filter=navigationList.filter(function(navigation){return findByOrigin(navigation,origin)});return filter[0]}function getNavigationByPosition(position){return navigationList[position]}function getNavigationPosition(origin){var navigation=getNavigationByOrigin(origin);return navigation?navigationList.indexOf(navigation):null}function existsNavigationTo(origin){return!!getNavigationByOrigin(origin)}function createNavigationTo(origin,destination){navigationList.push(NavigationFactory.create(origin,destination))}function removeNavigationOf(questionID){var navigationToRemove=navigationList.filter(function(navigation){return findByOrigin(navigation,questionID)}),indexToRemove=navigationList.indexOf(navigationToRemove[0]);indexToRemove>-1&&navigationList.splice(indexToRemove,1)}function removeNavigationByIndex(indexToRemove){navigationList.splice(indexToRemove,1)}function removeCurrentLastNavigation(){navigationList.splice(-1,1)}function findByOrigin(navigation,questionID){return navigation.origin===questionID}var self=this,navigationList=[];self.init=init,self.loadJsonData=loadJsonData,self.manageNavigation=manageNavigation,self.getNavigationByOrigin=getNavigationByOrigin,self.getNavigationByPosition=getNavigationByPosition,self.getNavigationPosition=getNavigationPosition,self.getNavigationList=getNavigationList,self.getNavigationListSize=getNavigationListSize,self.existsNavigationTo=existsNavigationTo,self.createNavigationTo=createNavigationTo,self.removeNavigationOf=removeNavigationOf,self.removeNavigationByIndex=removeNavigationByIndex,self.removeCurrentLastNavigation=removeCurrentLastNavigation}angular.module("otusjs.model.navigation").service("otusjs.model.navigation.NavigationContainerService",service),service.$inject=["otusjs.model.navigation.NavigationFactory"]}(),function(){"use strict";function service(SurveyItemManagerService,NavigationContainerService,NavigationAddService,NavigationRemoveService,AddRouteTaskService,UpdateRouteTaskService,NavigationValidatorService){function init(){NavigationContainerService.init()}function loadJsonData(data){NavigationContainerService.loadJsonData(data)}function getNavigationList(){return NavigationContainerService.getNavigationList()}function selectNavigationByOrigin(origin){return _selectedNavigation=NavigationContainerService.getNavigationByOrigin(origin)}function selectedNavigation(){return _selectedNavigation}function addNavigation(){NavigationAddService.execute()}function applyRoute(routeData){return _selectedNavigation.hasRoute(routeData)?UpdateRouteTaskService.execute(routeData,_selectedNavigation):AddRouteTaskService.execute(routeData,_selectedNavigation)}function removeNavigation(templateID){NavigationRemoveService.execute(templateID)}function getAvaiableRuleCriterionTargets(referenceItemID){var referenceItemIndex=SurveyItemManagerService.getItemPosition(referenceItemID),allItems=SurveyItemManagerService.getItemList(),avaiableItems=allItems.filter(function(item,index){return index<=referenceItemIndex});return avaiableItems}var self=this,_selectedNavigation=null;self.init=init,self.loadJsonData=loadJsonData,self.getNavigationList=getNavigationList,self.selectNavigationByOrigin=selectNavigationByOrigin,self.selectedNavigation=selectedNavigation,self.addNavigation=addNavigation,self.applyRoute=applyRoute,self.removeNavigation=removeNavigation,self.getAvaiableRuleCriterionTargets=getAvaiableRuleCriterionTargets}angular.module("otusjs.model.navigation").service("otusjs.model.navigation.NavigationManagerService",service),service.$inject=["SurveyItemManagerService","otusjs.model.navigation.NavigationContainerService","otusjs.model.navigation.NavigationAddService","otusjs.model.navigation.NavigationRemoveService","otusjs.model.navigation.AddRouteTaskService","otusjs.model.navigation.UpdateRouteTaskService","otusjs.model.navigation.NavigationValidatorService"]}(),function(){"use strict";function service(SurveyItemContainerService){function init(){itemList=SurveyItemContainerService.getItemList()}function isRouteValid(origin,destination){
if(origin===destination)return!1;var origenInList=_searchByID(origin),destinationInList=_searchByID(destination);return origenInList.index<destinationInList.index}function _searchByID(questionID){var result=null;return itemList.forEach(function(question,index){question.customID===questionID&&(result={},result.question=question,result.index=index)}),result}var self=this,itemList=[];self.init=init,self.isRouteValid=isRouteValid,init()}angular.module("otusjs.model.navigation").service("otusjs.model.navigation.NavigationValidatorService",service),service.$inject=["SurveyItemContainerService"]}(),function(){"use strict";function SurveyFactory(SurveyIdentityFactory,SurveyMetaInfoFactory,SurveyUUIDGenerator,NavigationManagerService,SurveyItemManagerService){function load(surveyTemplateJson){var metainfo=SurveyMetaInfoFactory.load(surveyTemplateJson.metainfo),identity=SurveyIdentityFactory.load(surveyTemplateJson.identity),UUID=surveyTemplateJson.oid;return new Survey(metainfo,identity,UUID,NavigationManagerService,SurveyItemManagerService)}function create(name,acronym){var metainfo=SurveyMetaInfoFactory.create(),identity=SurveyIdentityFactory.create(name,acronym),UUID=SurveyUUIDGenerator.generateSurveyUUID();return new Survey(metainfo,identity,UUID,NavigationManagerService,SurveyItemManagerService)}var self=this;return self.create=create,self.load=load,self}function Survey(surveyMetainfo,surveyIdentity,uuid,NavigationManagerService,SurveyItemManagerService){function getItemByTemplateID(templateID){return self.SurveyItemManager.getItemByTemplateID(templateID)}function getItemByCustomID(customID){return self.SurveyItemManager.getItemByCustomID(customID)}function getItemByID(id){return self.SurveyItemManager.getItemByID(id)}function isAvailableID(id){return!self.SurveyItemManager.existsItem(id)}function isAvailableCustomID(id){return self.SurveyItemManager.isAvailableCustomID(id)}function addItem(type){var item=self.SurveyItemManager.addItem(type,self.identity.acronym);return self.NavigationManager.addNavigation(),item}function removeItem(templateID){self.SurveyItemManager.removeItem(templateID),self.NavigationManager.removeNavigation(templateID)}function updateItem(item){self.navigationList[item.templateID]=item}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.oid=self.oid,json.identity=self.identity.toJson(),json.metainfo=self.metainfo.toJson(),json.itemContainer=[],self.SurveyItemManager.getItemList().forEach(function(item){json.itemContainer.push(item.toJson())}),json.navigationList=[],NavigationManagerService.getNavigationList().forEach(function(navigation){json.navigationList.push(navigation.toJson())}),JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"").replace(/ ":/g,'":')}var self=this;self.extents="StudioObject",self.objectType="Survey",self.oid=uuid,self.identity=surveyIdentity,self.metainfo=surveyMetainfo,self.SurveyItemManager=SurveyItemManagerService,self.NavigationManager=NavigationManagerService,self.NavigationManager.init(),self.SurveyItemManager.init(),self.addItem=addItem,self.removeItem=removeItem,self.getItemByTemplateID=getItemByTemplateID,self.getItemByCustomID=getItemByCustomID,self.getItemByID=getItemByID,self.isAvailableID=isAvailableID,self.isAvailableCustomID=isAvailableCustomID,self.updateItem=updateItem,self.toJson=toJson}angular.module("otusjs.survey").factory("SurveyFactory",SurveyFactory),SurveyFactory.$inject=["SurveyIdentityFactory","SurveyMetaInfoFactory","SurveyUUIDGenerator","otusjs.model.navigation.NavigationManagerService","SurveyItemManagerService"]}(),function(){"use strict";function SurveyIdentityFactory(){function load(surveyIdentityJson){return new SurveyIdentity(surveyIdentityJson.name,surveyIdentityJson.acronym,surveyIdentityJson.version)}function create(name,acronym,version){return new SurveyIdentity(name,acronym,version)}var self=this;return self.create=create,self.load=load,self}function SurveyIdentity(name,acronym){function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.name=self.name,json.acronym=self.acronym,json.recommendedTo=self.recommendedTo,json.description=self.description,json.keywords=self.keywords,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents="StudioObject",self.objectType="SurveyIdentity",self.name=name,self.acronym=acronym,self.recommendedTo="",self.description="",self.keywords=[],self.toJson=toJson}angular.module("otusjs.survey").factory("SurveyIdentityFactory",SurveyIdentityFactory)}(),function(){"use strict";function SurveyMetaInfoFactory(){function load(surveyMetaInfoJson){return new SurveyMetaInfo(surveyMetaInfoJson.creationDatetime)}function create(){var now=Date.now();return new SurveyMetaInfo(now)}var self=this;return self.create=create,self.load=load,self}function SurveyMetaInfo(creationDatetime){function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.creationDatetime=self.creationDatetime,json.otusStudioVersion=self.otusStudioVersion,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents="StudioObject",self.objectType="SurveyMetaInfo",self.creationDatetime=creationDatetime,self.otusStudioVersion="",self.toJson=toJson}angular.module("otusjs.survey").factory("SurveyMetaInfoFactory",SurveyMetaInfoFactory)}(),function(){"use strict";function SurveyItemFactory(CalendarQuestionFactory,IntegerQuestionFactory,DecimalQuestionFactory,SingleSelectionQuestionFactory,CheckboxQuestionFactory,TextQuestionFactory,TimeQuestionFactory,EmailQuestionFactory,PhoneQuestionFactory,TextItemFactory,ImageItemFactory){function create(itemType,templateID){var item=new SurveyItem(templateID);return factoryMap[itemType].create(templateID,item)}var self=this,factoryMap={CalendarQuestion:CalendarQuestionFactory,IntegerQuestion:IntegerQuestionFactory,DecimalQuestion:DecimalQuestionFactory,SingleSelectionQuestion:SingleSelectionQuestionFactory,CheckboxQuestion:CheckboxQuestionFactory,TextQuestion:TextQuestionFactory,TimeQuestion:TimeQuestionFactory,EmailQuestion:EmailQuestionFactory,PhoneQuestion:PhoneQuestionFactory,TextItem:TextItemFactory,ImageItem:ImageItemFactory};return self.create=create,self}function SurveyItem(templateID){var self=this;self.extents="StudioObject",self.objectType="SurveyItem",self.templateID=templateID}angular.module("otusjs.surveyItem").factory("SurveyItemFactory",SurveyItemFactory),SurveyItemFactory.$inject=["CalendarQuestionFactory","IntegerQuestionFactory","DecimalQuestionFactory","SingleSelectionQuestionFactory","CheckboxQuestionFactory","TextQuestionFactory","TimeQuestionFactory","EmailQuestionFactory","PhoneQuestionFactory","TextItemFactory","ImageItemFactory"]}(),function(){"use strict";function SurveyItemContainerService(SurveyItemFactory){function init(){itemList=[]}function manageItems(itemsToManage){itemList=itemsToManage}function getItemList(){return itemList}function getItemListSize(){return itemList.length}function getItemByTemplateID(templateID){var filter=itemList.filter(function(item){return findByTemplateID(item,templateID)});return filter[0]}function getItemByCustomID(customID){var filter=itemList.filter(function(item){return findByCustomID(item,customID)});return filter[0]}function getItemByID(id){var item=getItemByTemplateID(id);return item?item:getItemByCustomID(id)}function getAllCheckboxQuestion(){var occurences=[];return itemList.filter(function(item){"CheckboxQuestion"===item.objectType&&occurences.push(item)}),occurences}function getItemByPosition(position){return itemList[position]}function getItemPosition(templateID){var item=getItemByTemplateID(templateID);return item?itemList.indexOf(item):null}function existsItem(id){return!(!getItemByTemplateID(id)&&!getItemByCustomID(id))}function createItem(itemType,templateID){var item=SurveyItemFactory.create(itemType,templateID);return itemList.push(item),item}function removeItem(templateID){var itemToRemove=itemList.filter(function(item){return findByTemplateID(item,templateID)}),indexToRemove=itemList.indexOf(itemToRemove[0]);indexToRemove>-1&&itemList.splice(indexToRemove,1)}function removeItemByPosition(indexToRemove){itemList.splice(indexToRemove,1)}function removeCurrentLastItem(){itemList.splice(-1,1)}function findByTemplateID(item,templateID){return item.templateID.toLowerCase()===templateID.toLowerCase()}function findByCustomID(item,customID){return item.customID.toLowerCase()===customID.toLowerCase()}var self=this,itemList=[];self.init=init,self.manageItems=manageItems,self.getItemList=getItemList,self.getItemListSize=getItemListSize,self.getItemByTemplateID=getItemByTemplateID,self.getItemByCustomID=getItemByCustomID,self.getItemByID=getItemByID,self.getAllCheckboxQuestion=getAllCheckboxQuestion,self.getItemByPosition=getItemByPosition,self.getItemPosition=getItemPosition,self.existsItem=existsItem,self.createItem=createItem,self.removeItem=removeItem,self.removeItemByPosition=removeItemByPosition,self.removeCurrentLastItem=removeCurrentLastItem}angular.module("otusjs.surveyItem").service("SurveyItemContainerService",SurveyItemContainerService),SurveyItemContainerService.$inject=["SurveyItemFactory"]}(),function(){"use strict";function SurveyItemManagerService(SurveyItemContainerService){function init(){SurveyItemContainerService.init(),incrementalIDValue=0}function getItemList(){return SurveyItemContainerService.getItemList()}function getItemListSize(){return SurveyItemContainerService.getItemListSize()}function getItemByTemplateID(templateID){return SurveyItemContainerService.getItemByTemplateID(templateID)}function getItemByCustomID(customID){return SurveyItemContainerService.getItemByCustomID(customID)}function getItemByID(id){return SurveyItemContainerService.getItemByID(id)}function getItemPosition(customID){return SurveyItemContainerService.getItemPosition(customID)}function getAllCustomOptionsID(){var customOptionsID=[],checkboxQuestions=SurveyItemContainerService.getAllCheckboxQuestion();return checkboxQuestions.length>0&&checkboxQuestions.forEach(function(checkboxQuestion){checkboxQuestion.getAllCustomOptionsID().forEach(function(customOptionID){customOptionsID.push(customOptionID)})}),customOptionsID}function addItem(itemType,templateIDPrefix){var templateID;do templateID=templateIDPrefix+getNextIncrementalGenerator();while(!isAvailableCustomID(templateID));var item=SurveyItemContainerService.createItem(itemType,templateID);return item}function removeItem(templateID){SurveyItemContainerService.removeItem(templateID)}function getNextIncrementalGenerator(){return++incrementalIDValue}function existsItem(id){return SurveyItemContainerService.existsItem(id)}function isAvailableCustomID(id){var foundCustomOptionID=!1;return getAllCustomOptionsID().forEach(function(customOptionID){customOptionID===id&&(foundCustomOptionID=!0)}),!getItemByCustomID(id)&&!foundCustomOptionID}var self=this,incrementalIDValue=0;self.init=init,self.getItemList=getItemList,self.getItemListSize=getItemListSize,self.getItemByTemplateID=getItemByTemplateID,self.getItemByCustomID=getItemByCustomID,self.getItemByID=getItemByID,self.getItemPosition=getItemPosition,self.getAllCustomOptionsID=getAllCustomOptionsID,self.addItem=addItem,self.removeItem=removeItem,self.existsItem=existsItem,self.isAvailableCustomID=isAvailableCustomID}angular.module("otusjs.surveyItem").service("SurveyItemManagerService",SurveyItemManagerService),SurveyItemManagerService.$inject=["SurveyItemContainerService"]}(),function(){"use strict";function FillingRulesDataFactory(AlphanumericValidatorFactory,DistinctValidatorFactory,FutureDateValidatorFactory,InValidatorFactory,LowerCaseValidatorFactory,LowerLimitValidatorFactory,MandatoryValidatorFactory,MaxDateValidatorFactory,MaxLengthValidatorFactory,MaxTimeValidatorFactory,MinDateValidatorFactory,MinLengthValidatorFactory,MinTimeValidatorFactory,ParameterValidatorFactory,PastDateValidatorFactory,PrecisionValidatorFactory,RangeDateValidatorFactory,ScaleValidatorFactory,SpecialsValidatorFactory,UpperCaseValidatorFactory,UpperLimitValidatorFactory){function create(validator){return validatorsTemplates[validator].create()}var self=this;self.create=create;var validatorsTemplates={alphanumeric:AlphanumericValidatorFactory,distinct:DistinctValidatorFactory,futureDate:FutureDateValidatorFactory,in:InValidatorFactory,lowerLimit:LowerLimitValidatorFactory,lowerCase:LowerCaseValidatorFactory,mandatory:MandatoryValidatorFactory,maxDate:MaxDateValidatorFactory,maxLength:MaxLengthValidatorFactory,maxTime:MaxTimeValidatorFactory,minDate:MinDateValidatorFactory,minLength:MinLengthValidatorFactory,minTime:MinTimeValidatorFactory,parameter:ParameterValidatorFactory,pastDate:PastDateValidatorFactory,precision:PrecisionValidatorFactory,rangeDate:RangeDateValidatorFactory,scale:ScaleValidatorFactory,specials:SpecialsValidatorFactory,upperCase:UpperCaseValidatorFactory,upperLimit:UpperLimitValidatorFactory};return self}angular.module("otusjs.validation").factory("FillingRulesDataFactory",FillingRulesDataFactory),FillingRulesDataFactory.$inject=["AlphanumericValidatorFactory","DistinctValidatorFactory","FutureDateValidatorFactory","InValidatorFactory","LowerCaseValidatorFactory","LowerLimitValidatorFactory","MandatoryValidatorFactory","MaxDateValidatorFactory","MaxLengthValidatorFactory","MaxTimeValidatorFactory","MinDateValidatorFactory","MinLengthValidatorFactory","MinTimeValidatorFactory","ParameterValidatorFactory","PastDateValidatorFactory","PrecisionValidatorFactory","RangeDateValidatorFactory","ScaleValidatorFactory","SpecialsValidatorFactory","UpperCaseValidatorFactory","UpperLimitValidatorFactory"]}(),function(){"use strict";function FillingRulesOptionFactory(RulesFactory){function create(){return new FillingRules(RulesFactory)}var self=this;return self.create=create,self}function FillingRules(RulesFactory){function createOption(type){var option=RulesFactory.create(type);return self.options[type]=option,option}function removeFillingRules(type){delete self.options[type]}var self=this;self.extends="StudioObject",self.objectType="FillingRules",self.options={},self.createOption=createOption,self.removeFillingRules=removeFillingRules}angular.module("otusjs.validation").factory("FillingRulesOptionFactory",FillingRulesOptionFactory),FillingRulesOptionFactory.$inject=["RulesFactory"]}(),function(){"use strict";function RulesFactory(FillingRulesDataFactory){function create(validatorType){return new Rule(FillingRulesDataFactory,validatorType)}var self=this;return self.create=create,self}function Rule(FillingRulesDataFactory,validatorType){var self=this;self.extends="StudioObject",self.objectType="Rule",self.validatorType=validatorType,self.data=FillingRulesDataFactory.create(validatorType)}angular.module("otusjs.validation").factory("RulesFactory",RulesFactory),RulesFactory.$inject=["FillingRulesDataFactory"]}(),function(){"use strict";function service(RouteFactory,RouteConditionFactory,RuleFactory){function execute(routeData,navigation){var route=RouteFactory.create(routeData.origin,routeData.destination);return _setupConditions(route,routeData),navigation.addRoute(route),route}function _setupConditions(route,routeData){routeData.conditionSet.forEach(function(conditionData){var condition=RouteConditionFactory.create(conditionData.name);_setupRules(condition,conditionData),route.addCondition(condition)})}function _setupRules(condition,conditionData){conditionData.rules.forEach(function(ruleData){var when=ruleData.when.customID||ruleData.when,operator=ruleData.operator.type||ruleData.operator,answer=ruleData.answer.option?ruleData.answer.option.value:ruleData.answer,rule=RuleFactory.create(when,operator,answer);condition.addRule(rule)})}var self=this;self.execute=execute}angular.module("otusjs.model.navigation").service("otusjs.model.navigation.AddRouteTaskService",service),service.$inject=["otusjs.model.navigation.RouteFactory","otusjs.model.navigation.RouteConditionFactory","otusjs.model.navigation.RuleFactory"]}(),function(){"use strict";function service(NavigationContainerService,SurveyItemContainerService){function execute(){var itemCount=SurveyItemContainerService.getItemListSize();if(itemCount>1){var origin=SurveyItemContainerService.getItemByPosition(itemCount-2),destination=SurveyItemContainerService.getItemByPosition(itemCount-1);NavigationContainerService.createNavigationTo(origin.templateID,destination.templateID)}}var self=this;self.execute=execute}angular.module("otusjs.model.navigation").service("otusjs.model.navigation.NavigationAddService",service),service.$inject=["otusjs.model.navigation.NavigationContainerService","SurveyItemContainerService"]}(),function(){"use strict";function service(NavigationContainerService){function execute(templateID){if(NavigationContainerService.existsNavigationTo(templateID)){var navigationToRecicle=NavigationContainerService.getNavigationByOrigin(templateID),positionToRecicle=NavigationContainerService.getNavigationPosition(templateID);if(positionToRecicle&&0!==positionToRecicle){var navigationToUpdate=NavigationContainerService.getNavigationByPosition(positionToRecicle-1);navigationToUpdate.routes[0].destination=navigationToRecicle.routes[0].destination}NavigationContainerService.removeNavigationOf(templateID)}else NavigationContainerService.removeCurrentLastNavigation()}var self=this;self.execute=execute}angular.module("otusjs.model.navigation").service("otusjs.model.navigation.NavigationRemoveService",service),service.$inject=["otusjs.model.navigation.NavigationContainerService"]}(),function(){"use strict";function service(RouteFactory,RouteConditionFactory,RuleFactory){function execute(routeData,navigation){var route=RouteFactory.create(routeData.origin,routeData.destination);return _setupConditions(route,routeData),navigation.updateRoute(route),route}function _setupConditions(route,routeData){routeData.conditionSet.forEach(function(conditionData){var condition=RouteConditionFactory.create(conditionData.name);_setupRules(condition,conditionData),route.addCondition(condition)})}function _setupRules(condition,conditionData){conditionData.rules.forEach(function(ruleData){var when=ruleData.when.customID||ruleData.when,operator=ruleData.operator.type||ruleData.operator,answer=ruleData.answer.option?ruleData.answer.option.value:ruleData.answer,rule=RuleFactory.create(when,operator,answer);condition.addRule(rule)})}var self=this;self.execute=execute}angular.module("otusjs.model.navigation").service("otusjs.model.navigation.UpdateRouteTaskService",service),service.$inject=["otusjs.model.navigation.RouteFactory","otusjs.model.navigation.RouteConditionFactory","otusjs.model.navigation.RuleFactory"]}(),function(){"use strict";function ImageItemFactory(LabelFactory){function create(templateID,prototype){return new ImageItem(templateID,prototype,LabelFactory)}var self=this;return self.create=create,self}function ImageItem(templateID,prototype,LabelFactory){function isQuestion(){return!1}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.templateID=self.templateID,json.customID=self.customID,json.dataType=self.dataType,json.url=self.url,json.footer=self.footer,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents=prototype.objectType,self.objectType="ImageItem",self.templateID=templateID,self.customID=templateID,self.dataType="String",self.url="",self.footer={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()},self.isQuestion=isQuestion,self.toJson=toJson}angular.module("otusjs.surveyItem").factory("ImageItemFactory",ImageItemFactory),ImageItemFactory.$inject=["LabelFactory"]}(),function(){"use strict";function TextItemFactory(LabelFactory){function create(templateID,prototype){return new TextItem(templateID,prototype,LabelFactory)}var self=this;return self.create=create,self}function TextItem(templateID,prototype,LabelFactory){function isQuestion(){return!1}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.templateID=self.templateID,json.customID=self.customID,json.dataType=self.dataType,json.value=self.value,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents=prototype.objectType,self.objectType="TextItem",self.templateID=templateID,self.customID=templateID,self.dataType="String",self.value={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()},self.isQuestion=isQuestion,self.toJson=toJson}angular.module("otusjs.surveyItem").factory("TextItemFactory",TextItemFactory),TextItemFactory.$inject=["LabelFactory"]}(),function(){"use strict";function AnswerOptionFactory(LabelFactory){function create(value,parentQuestionID){return new AnswerOption(value,parentQuestionID,LabelFactory)}var self=this;return self.create=create,self}function AnswerOption(value,parentQuestionID,LabelFactory){function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.value=self.value,json.dataType=self.dataType,json.label=self.label,json.metadata=self.metadata,json.parentQuestionID=self.parentQuestionID,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents="StudioObject",self.objectType="AnswerOption",self.value=value,self.dataType="Integer",self.label={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()},self.parentQuestionID=parentQuestionID,self.toJson=toJson}angular.module("otusjs.surveyItem").factory("AnswerOptionFactory",AnswerOptionFactory),AnswerOptionFactory.$inject=["LabelFactory"]}(),function(){"use strict";function CalendarQuestionFactory(LabelFactory,MetadataGroupFactory,FillingRulesOptionFactory){function create(templateID,prototype){return new CalendarQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,FillingRulesOptionFactory)}var self=this;return self.create=create,self}function CalendarQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,FillingRulesOptionFactory){function isQuestion(){return!0}function validators(){var validatorsList=["mandatory","minDate","maxDate","rangeDate","futureDate","pastDate"];return validatorsList}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.templateID=self.templateID,json.customID=self.customID,json.dataType=self.dataType,json.label=self.label,json.metadata=self.metadata,json.fillingRules=self.fillingRules,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents=prototype.objectType,self.objectType="CalendarQuestion",self.templateID=templateID,self.customID=templateID,self.dataType="LocalDate",self.label={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()},self.metadata=MetadataGroupFactory.create(),self.fillingRules=FillingRulesOptionFactory.create(),self.isQuestion=isQuestion,self.validators=validators,self.toJson=toJson}angular.module("otusjs.surveyItem").factory("CalendarQuestionFactory",CalendarQuestionFactory),CalendarQuestionFactory.$inject=["LabelFactory","MetadataGroupFactory","FillingRulesOptionFactory"]}(),function(){"use strict";function CheckboxAnswerOptionFactory(LabelFactory){function create(optionID){return new CheckboxAnswerOption(optionID,LabelFactory)}function createWithData(checkboxAnswerOptionJSON){var parsedJson=JSON.parse(checkboxAnswerOptionJSON),CheckboxAnswerOptionObject=new CheckboxAnswerOption(parsedJson.optionID,LabelFactory);return CheckboxAnswerOptionObject.optionID=parsedJson.optionID,CheckboxAnswerOptionObject.customOptionID=parsedJson.customOptionID,CheckboxAnswerOptionObject.label=parsedJson.label,CheckboxAnswerOptionObject}var self=this;return self.create=create,self.createWithData=createWithData,self}function CheckboxAnswerOption(optionID,LabelFactory){function setCustomOptionID(id){self.customOptionID=id}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.optionID=self.optionID,json.customOptionID=self.customOptionID,json.dataType=self.dataType,json.label=self.label,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents="StudioObject",self.objectType="CheckboxAnswerOption",self.optionID=optionID,self.customOptionID=optionID,self.dataType="Boolean",self.label={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()},self.toJson=toJson,self.setCustomOptionID=setCustomOptionID}angular.module("otusjs.surveyItem").factory("CheckboxAnswerOptionFactory",CheckboxAnswerOptionFactory),CheckboxAnswerOptionFactory.$inject=["LabelFactory"]}(),function(){"use strict";function CheckboxQuestionFactory(LabelFactory,MetadataGroupFactory,CheckboxAnswerOptionFactory,FillingRulesOptionFactory){function create(templateID,prototype){return new CheckboxQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,CheckboxAnswerOptionFactory,FillingRulesOptionFactory)}var self=this;return self.create=create,self}function CheckboxQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,CheckboxAnswerOptionFactory,FillingRulesOptionFactory){function getOptionList(){return self.options}function getOptionListSize(){return self.options.length}function getOptionByOptionID(optionID){for(var aux=null,i=0;i<self.options.length;i++)self.options[i].optionID===optionID&&(aux=self.options[i]);return aux}function getOptionByCustomOptionID(customOptionID){for(var aux=null,i=0;i<self.options.length;i++)self.options[i].customOptionID===customOptionID&&(aux=self.options[i]);return aux}function getOptionByValue(value){return self.options[value-1]}function isQuestion(){return!0}function validators(){var validatorsList=["mandatory"];return validatorsList}function createOption(id){var option=CheckboxAnswerOptionFactory.create(id);return self.options.push(option),option}function loadJsonOption(checkboxAnswerOptionJSON){var option=CheckboxAnswerOptionFactory.createWithData(checkboxAnswerOptionJSON);return self.options.push(option),option}function removeOption(value){self.options.splice(value-1,1),reorderOptionValues()}function removeLastOption(){self.options.splice(-1,1)}function getAllCustomOptionsID(){var customOptionsID=[];return self.options.forEach(function(option){customOptionsID.push(option.customOptionID)}),customOptionsID}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.templateID=self.templateID,json.customID=self.customID,json.dataType=self.dataType,json.label=self.label,json.options=self.options,json.metadata=self.metadata,json.fillingRules=self.fillingRules,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}function reorderOptionValues(){self.options.forEach(function(option,index){option.value=++index})}var self=this;self.extents=prototype.objectType,self.objectType="CheckboxQuestion",self.templateID=templateID,self.customID=templateID,self.dataType="Array",self.label={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()},self.metadata=MetadataGroupFactory.create(),self.fillingRules=FillingRulesOptionFactory.create(),self.options=[],self.getOptionList=getOptionList,self.getOptionListSize=getOptionListSize,self.getOptionByValue=getOptionByValue,self.getOptionByOptionID=getOptionByOptionID,self.getOptionByCustomOptionID=getOptionByCustomOptionID,self.createOption=createOption,self.loadJsonOption=loadJsonOption,self.removeOption=removeOption,self.removeLastOption=removeLastOption,self.isQuestion=isQuestion,self.validators=validators,self.getAllCustomOptionsID=getAllCustomOptionsID,self.toJson=toJson}angular.module("otusjs.surveyItem").factory("CheckboxQuestionFactory",CheckboxQuestionFactory),CheckboxQuestionFactory.$inject=["LabelFactory","MetadataGroupFactory","CheckboxAnswerOptionFactory","FillingRulesOptionFactory"]}(),function(){"use strict";function DecimalQuestionFactory(LabelFactory,MetadataGroupFactory,UnitFactory,FillingRulesOptionFactory){function create(templateID,prototype){return new DecimalQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,UnitFactory,FillingRulesOptionFactory)}var self=this;return self.create=create,self}function DecimalQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,UnitFactory,FillingRulesOptionFactory){function isQuestion(){return!0}function validators(){var validatorsList=["mandatory","distinct","lowerLimit","upperLimit","in","scale"];return validatorsList}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.templateID=self.templateID,json.customID=self.customID,json.dataType=self.dataType,json.label=self.label,json.metadata=self.metadata,json.unit=self.unit,json.fillingRules=self.fillingRules,JSON.stringify(json)}var self=this;self.extents=prototype.objectType,self.objectType="DecimalQuestion",self.templateID=templateID,self.customID=templateID,self.dataType="Decimal",self.label={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()},self.metadata=MetadataGroupFactory.create(),self.fillingRules=FillingRulesOptionFactory.create(),self.unit={ptBR:UnitFactory.create(),enUS:UnitFactory.create(),esES:UnitFactory.create()},self.isQuestion=isQuestion,self.validators=validators,self.toJson=toJson}angular.module("otusjs.surveyItem").factory("DecimalQuestionFactory",DecimalQuestionFactory),DecimalQuestionFactory.$inject=["LabelFactory","MetadataGroupFactory","UnitFactory","FillingRulesOptionFactory"]}(),function(){"use strict";function EmailQuestionFactory(LabelFactory,MetadataGroupFactory,FillingRulesOptionFactory){function create(templateID,prototype){return new EmailQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,FillingRulesOptionFactory)}var self=this;return self.create=create,self}function EmailQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,FillingRulesOptionFactory){function isQuestion(){return!0}function validators(){var validatorsList=["mandatory"];return validatorsList}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.templateID=self.templateID,json.customID=self.customID,json.dataType=self.dataType,json.label=self.label,json.metadata=self.metadata,json.fillingRules=self.fillingRules,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents=prototype.objectType,self.objectType="EmailQuestion",self.templateID=templateID,self.customID=templateID,self.dataType="String",self.label={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()},self.metadata=MetadataGroupFactory.create(),self.fillingRules=FillingRulesOptionFactory.create(),self.isQuestion=isQuestion,self.validators=validators,self.toJson=toJson}angular.module("otusjs.surveyItem").factory("EmailQuestionFactory",EmailQuestionFactory),EmailQuestionFactory.$inject=["LabelFactory","MetadataGroupFactory","FillingRulesOptionFactory"]}(),function(){"use strict";function IntegerQuestionFactory(LabelFactory,MetadataGroupFactory,UnitFactory,FillingRulesOptionFactory){function create(templateID,prototype){return new IntegerQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,UnitFactory,FillingRulesOptionFactory)}var self=this;return self.create=create,self}function IntegerQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,UnitFactory,FillingRulesOptionFactory){function isQuestion(){return!0}function validators(){var validatorsList=["mandatory","distinct","lowerLimit","upperLimit","precision","in"];return validatorsList}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.templateID=self.templateID,json.customID=self.customID,json.dataType=self.dataType,json.label=self.label,json.metadata=self.metadata,
json.unit=self.unit,json.fillingRules=self.fillingRules,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents=prototype.objectType,self.objectType="IntegerQuestion",self.templateID=templateID,self.customID=templateID,self.dataType="Integer",self.label={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()},self.metadata=MetadataGroupFactory.create(),self.fillingRules=FillingRulesOptionFactory.create(),self.unit={ptBR:UnitFactory.create(),enUS:UnitFactory.create(),esES:UnitFactory.create()},self.isQuestion=isQuestion,self.validators=validators,self.toJson=toJson}angular.module("otusjs.surveyItem").factory("IntegerQuestionFactory",IntegerQuestionFactory),IntegerQuestionFactory.$inject=["LabelFactory","MetadataGroupFactory","UnitFactory","FillingRulesOptionFactory"]}(),function(){"use strict";function PhoneQuestionFactory(LabelFactory,MetadataGroupFactory,FillingRulesOptionFactory){function create(templateID,prototype){return new PhoneQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,FillingRulesOptionFactory)}var self=this;return self.create=create,self}function PhoneQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,FillingRulesOptionFactory){function isQuestion(){return!0}function validators(){var validatorsList=["mandatory"];return validatorsList}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.templateID=self.templateID,json.customID=self.customID,json.dataType=self.dataType,json.label=self.label,json.metadata=self.metadata,json.unit=self.unit,json.fillingRules=self.fillingRules,JSON.stringify(json)}var self=this;self.extents=prototype.objectType,self.objectType="PhoneQuestion",self.templateID=templateID,self.customID=templateID,self.dataType="Integer",self.label={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()},self.metadata=MetadataGroupFactory.create(),self.fillingRules=FillingRulesOptionFactory.create(),self.isQuestion=isQuestion,self.validators=validators,self.toJson=toJson}angular.module("otusjs.surveyItem").factory("PhoneQuestionFactory",PhoneQuestionFactory),PhoneQuestionFactory.$inject=["LabelFactory","MetadataGroupFactory","FillingRulesOptionFactory"]}(),function(){"use strict";function SingleSelectionQuestionFactory(LabelFactory,MetadataGroupFactory,AnswerOptionFactory,FillingRulesOptionFactory){function create(templateID,prototype){return new SingleSelectionQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,AnswerOptionFactory,FillingRulesOptionFactory)}var self=this;return self.create=create,self}function SingleSelectionQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,AnswerOptionFactory,FillingRulesOptionFactory){function getOptionListSize(){return self.options.length}function getOptionByValue(value){return self.options[value-1]}function isQuestion(){return!0}function validators(){var validatorsList=["mandatory"];return validatorsList}function createOption(){var option=AnswerOptionFactory.create(self.options.length+1);return self.options.push(option),option}function removeOption(value){self.options.splice(value-1,1),reorderOptionValues()}function removeLastOption(){self.options.splice(-1,1)}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.templateID=self.templateID,json.customID=self.customID,json.dataType=self.dataType,json.label=self.label,json.options=self.options,json.metadata=self.metadata,json.fillingRules=self.fillingRules,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}function reorderOptionValues(){self.options.forEach(function(option,index){option.value=++index})}var self=this;self.extents=prototype.objectType,self.objectType="SingleSelectionQuestion",self.templateID=templateID,self.customID=templateID,self.dataType="Integer",self.label={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()},self.metadata=MetadataGroupFactory.create(),self.fillingRules=FillingRulesOptionFactory.create(),self.options=[],self.getOptionListSize=getOptionListSize,self.getOptionByValue=getOptionByValue,self.createOption=createOption,self.removeOption=removeOption,self.removeLastOption=removeLastOption,self.isQuestion=isQuestion,self.validators=validators,self.toJson=toJson}angular.module("otusjs.surveyItem").factory("SingleSelectionQuestionFactory",SingleSelectionQuestionFactory),SingleSelectionQuestionFactory.$inject=["LabelFactory","MetadataGroupFactory","AnswerOptionFactory","FillingRulesOptionFactory"]}(),function(){"use strict";function TextQuestionFactory(LabelFactory,MetadataGroupFactory,FillingRulesOptionFactory){function create(templateID,prototype){return new TextQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,FillingRulesOptionFactory)}var self=this;return self.create=create,self}function TextQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,FillingRulesOptionFactory){function isQuestion(){return!0}function validators(){var validatorsList=["mandatory","alphanumeric","lowerCase","minLength","maxLength","specials","upperCase"];return validatorsList}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.templateID=self.templateID,json.customID=self.customID,json.dataType=self.dataType,json.label=self.label,json.metadata=self.metadata,json.fillingRules=self.fillingRules,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents=prototype.objectType,self.objectType="TextQuestion",self.templateID=templateID,self.customID=templateID,self.dataType="String",self.label={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()},self.metadata=MetadataGroupFactory.create(),self.fillingRules=FillingRulesOptionFactory.create(),self.isQuestion=isQuestion,self.validators=validators,self.toJson=toJson}angular.module("otusjs.surveyItem").factory("TextQuestionFactory",TextQuestionFactory),TextQuestionFactory.$inject=["LabelFactory","MetadataGroupFactory","FillingRulesOptionFactory"]}(),function(){"use strict";function TimeQuestionFactory(LabelFactory,MetadataGroupFactory,FillingRulesOptionFactory){function create(templateID,prototype){return new TimeQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,FillingRulesOptionFactory)}var self=this;return self.create=create,self}function TimeQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,FillingRulesOptionFactory){function isQuestion(){return!0}function validators(){var validatorsList=["mandatory","minTime","maxTime"];return validatorsList}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.templateID=self.templateID,json.customID=self.customID,json.dataType=self.dataType,json.label=self.label,json.metadata=self.metadata,json.fillingRules=self.fillingRules,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents=prototype.objectType,self.objectType="TimeQuestion",self.templateID=templateID,self.customID=templateID,self.dataType="LocalTime",self.label={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()},self.metadata=MetadataGroupFactory.create(),self.fillingRules=FillingRulesOptionFactory.create(),self.isQuestion=isQuestion,self.validators=validators,self.toJson=toJson}angular.module("otusjs.surveyItem").factory("TimeQuestionFactory",TimeQuestionFactory),TimeQuestionFactory.$inject=["LabelFactory","MetadataGroupFactory","FillingRulesOptionFactory"]}(),function(){"use strict";function AlphanumericValidatorFactory(LabelFactory){function create(value){return new AlphanumericValidator(value,LabelFactory)}var self=this;return self.create=create,self}function AlphanumericValidator(value,LabelFactory){var self=this;self.reference=!0}angular.module("otusjs.validation").factory("AlphanumericValidatorFactory",AlphanumericValidatorFactory),AlphanumericValidatorFactory.$inject=["LabelFactory"]}(),function(){"use strict";function DistinctValidatorFactory(LabelFactory){function create(value){return new DistinctValidatorFactory(value,LabelFactory)}var self=this;return self.create=create,self}angular.module("otusjs.validation").factory("DistinctValidatorFactory",DistinctValidatorFactory),DistinctValidatorFactory.$inject=["LabelFactory"]}(),function(){"use strict";function FutureDateValidatorFactory(){function create(value){return new FutureDateValidator(value)}var self=this;return self.create=create,self}function FutureDateValidator(value){var self=this;self.reference=new Date}angular.module("otusjs.validation").factory("FutureDateValidatorFactory",FutureDateValidatorFactory)}(),function(){"use strict";function InValidatorFactory(LabelFactory){function create(value){return new InValidator(value,LabelFactory)}var self=this;return self.create=create,self}function InValidator(value,LabelFactory){var self=this;self.reference={initial:null,end:null}}angular.module("otusjs.validation").factory("InValidatorFactory",InValidatorFactory),InValidatorFactory.$inject=["LabelFactory"]}(),function(){"use strict";function LowerCaseValidatorFactory(LabelFactory){function create(value){return new LowerCaseValidator(value,LabelFactory)}var self=this;return self.create=create,self}function LowerCaseValidator(value,LabelFactory){var self=this;self.reference=!0}angular.module("otusjs.validation").factory("LowerCaseValidatorFactory",LowerCaseValidatorFactory),LowerCaseValidatorFactory.$inject=["LabelFactory"]}(),function(){"use strict";function LowerLimitValidatorFactory(LabelFactory){function create(value){return new LowerLimitValidator(value,LabelFactory)}var self=this;return self.create=create,self}function LowerLimitValidator(value,LabelFactory){var self=this;self.reference=null}angular.module("otusjs.validation").factory("LowerLimitValidatorFactory",LowerLimitValidatorFactory),LowerLimitValidatorFactory.$inject=["LabelFactory"]}(),function(){"use strict";function MandatoryValidatorFactory(LabelFactory){function create(value){return new MandatoryValidator(value,LabelFactory)}var self=this;return self.create=create,self}function MandatoryValidator(value,LabelFactory){var self=this;self.reference=!1}angular.module("otusjs.validation").factory("MandatoryValidatorFactory",MandatoryValidatorFactory),MandatoryValidatorFactory.$inject=["LabelFactory"]}(),function(){"use strict";function MaxDateValidatorFactory(LabelFactory){function create(value){return new MaxDateValidator(value,LabelFactory)}var self=this;return self.create=create,self}function MaxDateValidator(value,LabelFactory){var self=this;self.reference=new Date}angular.module("otusjs.validation").factory("MaxDateValidatorFactory",MaxDateValidatorFactory),MaxDateValidatorFactory.$inject=["LabelFactory"]}(),function(){"use strict";function MaxLengthValidatorFactory(LabelFactory){function create(value){return new MaxLengthValidator(value,LabelFactory)}var self=this;return self.create=create,self}function MaxLengthValidator(value,LabelFactory){var self=this;self.size=null}angular.module("otusjs.validation").factory("MaxLengthValidatorFactory",MaxLengthValidatorFactory),MaxLengthValidatorFactory.$inject=["LabelFactory"]}(),function(){"use strict";function MaxTimeValidatorFactory(LabelFactory){function create(value){return new MaxTimeValidator(value,LabelFactory)}var self=this;return self.create=create,self}function MaxTimeValidator(value,LabelFactory){var self=this;self.reference=""}angular.module("otusjs.validation").factory("MaxTimeValidatorFactory",MaxTimeValidatorFactory),MaxTimeValidatorFactory.$inject=["LabelFactory"]}(),function(){"use strict";function MinDateValidatorFactory(LabelFactory){function create(value){return new MinDateValidator(value,LabelFactory)}var self=this;return self.create=create,self}function MinDateValidator(value,LabelFactory){var self=this;self.reference=new Date}angular.module("otusjs.validation").factory("MinDateValidatorFactory",MinDateValidatorFactory),MinDateValidatorFactory.$inject=["LabelFactory"]}(),function(){"use strict";function MinLengthValidatorFactory(LabelFactory){function create(value){return new MinLengthValidator(value,LabelFactory)}var self=this;return self.create=create,self}function MinLengthValidator(value,LabelFactory){var self=this;self.size=null}angular.module("otusjs.validation").factory("MinLengthValidatorFactory",MinLengthValidatorFactory),MinLengthValidatorFactory.$inject=["LabelFactory"]}(),function(){"use strict";function MinTimeValidatorFactory(LabelFactory){function create(value){return new MinTimeValidator(value,LabelFactory)}var self=this;return self.create=create,self}function MinTimeValidator(value,LabelFactory){var self=this;self.reference=""}angular.module("otusjs.validation").factory("MinTimeValidatorFactory",MinTimeValidatorFactory),MinTimeValidatorFactory.$inject=["LabelFactory"]}(),function(){"use strict";function ParameterValidatorFactory(LabelFactory){function create(value){return new ParameterValidator(value,LabelFactory)}var self=this;return self.create=create,self}function ParameterValidator(value,LabelFactory){var self=this;self.reference=""}angular.module("otusjs.validation").factory("ParameterValidatorFactory",ParameterValidatorFactory),ParameterValidatorFactory.$inject=["LabelFactory"]}(),function(){"use strict";function PastDateValidatorFactory(LabelFactory){function create(value){return new PastDateValidator(value,LabelFactory)}var self=this;return self.create=create,self}function PastDateValidator(value,LabelFactory){var self=this;self.reference=new Date}angular.module("otusjs.validation").factory("PastDateValidatorFactory",PastDateValidatorFactory),PastDateValidatorFactory.$inject=["LabelFactory"]}(),function(){"use strict";function PrecisionValidatorFactory(LabelFactory){function create(value){return new PrecisionValidator(value,LabelFactory)}var self=this;return self.create=create,self}function PrecisionValidator(value,LabelFactory){var self=this;self.reference=null}angular.module("otusjs.validation").factory("PrecisionValidatorFactory",PrecisionValidatorFactory),PrecisionValidatorFactory.$inject=["LabelFactory"]}(),function(){"use strict";function RangeDateValidatorFactory(LabelFactory){function create(value){return new RangeDateValidator(value,LabelFactory)}var self=this;return self.create=create,self}function RangeDateValidator(value,LabelFactory){var self=this;self.reference={initial:new Date,end:new Date}}angular.module("otusjs.validation").factory("RangeDateValidatorFactory",RangeDateValidatorFactory),RangeDateValidatorFactory.$inject=["LabelFactory"]}(),function(){"use strict";function ScaleValidatorFactory(LabelFactory){function create(value){return new ScaleValidator(value,LabelFactory)}var self=this;return self.create=create,self}function ScaleValidator(value,LabelFactory){var self=this;self.reference=null}angular.module("otusjs.validation").factory("ScaleValidatorFactory",ScaleValidatorFactory),ScaleValidatorFactory.$inject=["LabelFactory"]}(),function(){"use strict";function SpecialsValidatorFactory(LabelFactory){function create(value){return new SpecialsValidator(value,LabelFactory)}var self=this;return self.create=create,self}function SpecialsValidator(value,LabelFactory){var self=this;self.reference=!0}angular.module("otusjs.validation").factory("SpecialsValidatorFactory",SpecialsValidatorFactory),SpecialsValidatorFactory.$inject=["LabelFactory"]}(),function(){"use strict";function UpperCaseValidatorFactory(LabelFactory){function create(value){return new UpperCaseValidator(value,LabelFactory)}var self=this;return self.create=create,self}function UpperCaseValidator(value,LabelFactory){var self=this;self.reference=!0}angular.module("otusjs.validation").factory("UpperCaseValidatorFactory",UpperCaseValidatorFactory),UpperCaseValidatorFactory.$inject=["LabelFactory"]}(),function(){"use strict";function UpperLimitValidatorFactory(LabelFactory){function create(value){return new UpperLimitValidator(value,LabelFactory)}var self=this;return self.create=create,self}function UpperLimitValidator(value,LabelFactory){var self=this;self.reference=null}angular.module("otusjs.validation").factory("UpperLimitValidatorFactory",UpperLimitValidatorFactory),UpperLimitValidatorFactory.$inject=["LabelFactory"]}();