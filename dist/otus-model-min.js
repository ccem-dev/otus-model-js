!function(){"use strict";angular.module("otusjs.activity",[])}(),function(){"use strict";angular.module("otusjs.metadata",[])}(),function(){"use strict";angular.module("otusjs.misc",[])}(),function(){"use strict";angular.module("otusjs.navigation",[])}(),function(){"use strict";angular.module("otusjs.survey",[])}(),function(){"use strict";angular.module("otusjs.surveyItem",[])}(),function(){"use strict";angular.module("otusjs",["otusjs.metadata","otusjs.misc","otusjs.navigation","otusjs.surveyItem","otusjs.survey","otusjs.activity","utils"])}(),function(){"use strict";function ActivityFacadeService(AnswerFactory){function fillQuestion(Question,answerValue,Metadata){AnswerFactory.create(Question,answerValue,Metadata)}var self=this;self.fillQuestion=fillQuestion}angular.module("otusjs.activity").service("ActivityFacadeService",ActivityFacadeService),ActivityFacadeService.$inject=["AnswerFactory"]}(),function(){"use strict";function AnswerContainerService(){function init(){answerList=[]}function addAnswer(Answer){answerList.push(Answer)}function removeAnswer(questionID){var aswer=searchAnswer(questionID);if(void 0===aswer)return!1;var index=getIndexAnswerOnList(questionID);return answerList.splice(index,1),!0}function getIndexAnswerOnList(questionID){for(var i=0;i<answerList.length;i++)if(answerList[i].questionID===questionID)return i}function searchAnswer(questionID){for(var i=0;i<answerList.length;i++)if(answerList[i].questionID===questionID)return answerList[i]}function answerListSize(){return answerList.length}var self=this,answerList=[];self.init=init,self.searchAnswer=searchAnswer,self.addAnswer=addAnswer,self.answerListSize=answerListSize,self.removeAnswer=removeAnswer,self.getIndexAnswerOnList=getIndexAnswerOnList}angular.module("otusjs.activity").service("AnswerContainerService",AnswerContainerService)}(),function(){"use strict";function AnswerFactory(){function create(Question,answer,Metadata){return new Answer(Question,answer,Metadata)}var self=this;return self.create=create,self}function Answer(Question,answer,Metadata){function getObjectAnswer(){return self}function removeAnswer(){self.value=void 0}function removeMetadata(){self.metadata=void 0}function isFilled(){return void 0===self.value&&void 0===self.metadata}var self=this;self.objectType=Question.objectType,self.questionID=Question.templateID,self.value=answer,self.metadata=Metadata,self.getObjectAnswer=getObjectAnswer,self.removeAnswer=removeAnswer,self.removeMetadata=removeMetadata,self.isFilled=isFilled}angular.module("otusjs.activity").factory("AnswerFactory",AnswerFactory)}(),function(){"use strict";function ModelFacadeService(SurveyItemFactory,LabelFactory,UnitFactory,SurveyFactory,SurveyIdentityFactory,MetadataGroupFactory){function getSurveyItemFactory(){return SurveyItemFactory}function getLabelFactory(){return LabelFactory}function getUnitFactory(){return UnitFactory}function getSurveyFactory(){return SurveyFactory}function getSurveyIdentityFactory(){return SurveyIdentityFactory}function getMetadataGroupFactory(){return MetadataGroupFactory}var self=this;self.getSurveyItemFactory=getSurveyItemFactory,self.getLabelFactory=getLabelFactory,self.getUnitFactory=getUnitFactory,self.getSurveyFactory=getSurveyFactory,self.getSurveyIdentityFactory=getSurveyIdentityFactory,self.getMetadataGroupFactory=getMetadataGroupFactory}angular.module("otusjs").service("ModelFacadeService",ModelFacadeService),ModelFacadeService.$inject=["SurveyItemFactory","LabelFactory","UnitFactory","SurveyFactory","SurveyIdentityFactory","MetadataGroupFactory"]}(),function(){"use strict";function AddMetadataAnswerService(){function execute(item){return item.metadata.createOption()}var self=this;self.execute=execute}angular.module("otusjs.metadata").service("AddMetadataAnswerService",AddMetadataAnswerService)}(),function(){"use strict";function RemoveMetadataOptionService(){function execute(item){item.metadata.removeLastOption()}var self=this;self.execute=execute}angular.module("otusjs.metadata").service("RemoveMetadataOptionService",RemoveMetadataOptionService)}(),function(){"use strict";function AddRouteConditionService(RouteConditionFactory){function execute(conditionName,route){var routeCondition=RouteConditionFactory.create(conditionName);return route.addCondition(routeCondition),routeCondition}var self=this;self.execute=execute}angular.module("otusjs.navigation").service("AddRouteConditionService",AddRouteConditionService),AddRouteConditionService.$inject=["RouteConditionFactory"]}(),function(){"use strict";function AddRouteService(RouteFactory){function execute(routeData){var route=RouteFactory.create(routeData.name,routeData.parentNavigation.origin,routeData.destination);return routeData.parentNavigation.addRoute(route),route}var self=this;self.execute=execute}angular.module("otusjs.navigation").service("AddRouteService",AddRouteService),AddRouteService.$inject=["RouteFactory"]}(),function(){"use strict";function AddRuleService(RuleFactory){function execute(ruleData,route){var newRule=RuleFactory.create(ruleData.when,ruleData.operator,ruleData.answer);return route.conditionSet[0].addRule(newRule),newRule}var self=this;self.execute=execute}angular.module("otusjs.navigation").service("AddRuleService",AddRuleService),AddRuleService.$inject=["RuleFactory"]}(),function(){"use strict";function RemoveRouteService(){function execute(routeData){routeData.parentNavigation.removeRoute(routeData.name)}var self=this;self.execute=execute}angular.module("otusjs.navigation").service("RemoveRouteService",RemoveRouteService)}(),function(){"use strict";function RemoveRuleService(){function execute(rule,route){route.conditionSet[0].removeRule(rule)}var self=this;self.execute=execute}angular.module("otusjs.navigation").service("RemoveRuleService",RemoveRuleService)}(),function(){"use strict";function AddAnswerOptionService(){function execute(item){return item.createOption()}var self=this;self.execute=execute}angular.module("otusjs.surveyItem").service("AddAnswerOptionService",AddAnswerOptionService)}(),function(){"use strict";function AddSurveyItemService(){function execute(itemType,survey){return survey.addItem(itemType)}var self=this;self.execute=execute}angular.module("otusjs.surveyItem").service("AddSurveyItemService",AddSurveyItemService)}(),function(){"use strict";function RemoveAnswerOptionService(){function execute(item){item.removeLastOption()}var self=this;self.execute=execute}angular.module("otusjs.surveyItem").service("RemoveAnswerOptionService",RemoveAnswerOptionService)}(),function(){"use strict";function RemoveSurveyItemService(){function execute(item,survey){survey.removeItem(item.templateID)}var self=this;self.execute=execute}angular.module("otusjs.surveyItem").service("RemoveSurveyItemService",RemoveSurveyItemService)}(),function(){"use strict";function MetadataAnswerFactory(LabelFactory){function create(value){return new MetadataAnswer(value,LabelFactory)}var self=this;return self.create=create,self}function MetadataAnswer(value,LabelFactory){var self=this;self["extends"]="StudioObject",self.objectType="MetadataAnswer",self.dataType="Integer",self.value=value,self.label={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()}}angular.module("otusjs.metadata").factory("MetadataAnswerFactory",MetadataAnswerFactory),MetadataAnswerFactory.$inject=["LabelFactory"]}(),function(){"use strict";function MetadataGroupFactory(MetadataAnswerFactory){function create(){return new MetadataGroup(MetadataAnswerFactory)}var self=this;return self.create=create,self}function MetadataGroup(MetadataAnswerFactory){function getOptionListSize(){return self.options.length}function getOptionByValue(value){return self.options[value-1]}function createOption(){var option=MetadataAnswerFactory.create(self.options.length+1);return self.options.push(option),option}function removeOption(value){self.options.splice(value-1,1),reorderOptionValues()}function removeLastOption(){self.options.splice(-1,1)}function reorderOptionValues(){self.options.forEach(function(option,index){option.value=++index})}var self=this;self.extents="StudioObject",self.objectType="MetadataGroup",self.options=[],self.getOptionListSize=getOptionListSize,self.getOptionByValue=getOptionByValue,self.createOption=createOption,self.removeOption=removeOption,self.removeLastOption=removeLastOption}angular.module("otusjs.metadata").factory("MetadataGroupFactory",MetadataGroupFactory),MetadataGroupFactory.$inject=["MetadataAnswerFactory"]}(),function(){"use strict";function LabelFactory(){function create(){return new Label}var self=this;return self.create=create,self}function Label(){Object.defineProperty(this,"extends",{value:"StudioObject",writable:!1,enumerable:!0}),Object.defineProperty(this,"objectType",{value:"Label",writable:!1,enumerable:!0}),Object.defineProperty(this,"oid",{value:"",writable:!1,enumerable:!0}),Object.defineProperty(this,"plainText",{value:"",writable:!0,enumerable:!0}),Object.defineProperty(this,"formattedText",{value:"",writable:!0,enumerable:!0})}angular.module("otusjs.misc").factory("LabelFactory",LabelFactory)}(),function(){"use strict";function UnitFactory(){function create(){return new Unit}var self=this;return self.create=create,self}function Unit(){Object.defineProperty(this,"extends",{value:"StudioObject",writable:!1,enumerable:!0}),Object.defineProperty(this,"objectType",{value:"Unit",writable:!1,enumerable:!0}),Object.defineProperty(this,"oid",{value:"",writable:!1,enumerable:!0}),Object.defineProperty(this,"plainText",{value:"",writable:!0,enumerable:!0}),Object.defineProperty(this,"formattedText",{value:"",writable:!0,enumerable:!0})}angular.module("otusjs.misc").factory("UnitFactory",UnitFactory)}(),function(){"use strict";function NavigationFactory(RouteFactory){function create(origin,destination){var navigation=new Navigation(origin);if(destination){var defaultRoute=RouteFactory.create("1",navigation.origin,destination);navigation.addRoute(defaultRoute)}return navigation}var self=this;return self.create=create,self}function Navigation(origin){function listRoutes(){var clone=[];return self.routes.forEach(function(route){clone.push(route)}),clone}function addRoute(route){self.routes.push(route)}function removeRoute(name){var routeToRemove=self.routes.filter(function(route){return route.name===name}),indexToRemove=self.routes.indexOf(routeToRemove[0]);return indexToRemove>-1&&self.routes.splice(indexToRemove,1),routeToRemove[0]}function updateRoute(route){self.routes.forEach(function(currentRoute){currentRoute.index===route.index&&(self.routes[currentRoute.index]=route)})}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.origin=self.origin,json.routes=[],self.routes.forEach(function(route){json.routes.push(route.toJson())}),JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents="StudioObject",self.objectType="Navigation",self.origin=origin,self.routes=[],self.listRoutes=listRoutes,self.addRoute=addRoute,self.removeRoute=removeRoute,self.updateRoute=updateRoute,self.toJson=toJson}angular.module("otusjs.navigation").factory("NavigationFactory",NavigationFactory),NavigationFactory.$inject=["RouteFactory"]}(),function(){"use strict";function RouteConditionFactory(){function create(name){return new RouteCondition(name)}var self=this;return self.create=create,self}function RouteCondition(conditionName){function listRules(){var clone=[];return self.rules.forEach(function(rule){clone.push(rule)}),clone}function addRule(rule){var ruleNotExist=-1===self.rules.indexOf(rule);ruleNotExist&&self.rules.push(rule)}function removeRule(rule){var indexToRemove=self.rules.indexOf(rule);self.rules.splice(indexToRemove,1)}function toJson(){var json={extents:"StudioObject",objectType:"RouteCondition",name:self.name,rules:[]};return self.rules.forEach(function(rule){json.rules.push(rule.toJson())}),JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents="StudioObject",self.objectType="RouteCondition",self.name=conditionName,self.rules=[],self.listRules=listRules,self.addRule=addRule,self.removeRule=removeRule,self.toJson=toJson}angular.module("otusjs.navigation").factory("RouteConditionFactory",RouteConditionFactory)}(),function(){"use strict";function RouteFactory(){function create(name,origin,destination){return new Route(name,origin,destination)}var self=this;return self.create=create,self}function Route(routeName,routeOrigin,routeDestination){function getConditionSet(){var clone=[];return self.conditionSet.forEach(function(condition){clone.push(condition)}),clone}function getConditionSetSize(){return getConditionSet().length}function addCondition(condition){condition.name+=getConditionSetSize()+1,self.conditionSet.push(condition)}function removeCondition(){var conditionToRemove=self.conditionSet.filter(function(condition){return condition.name===name}),indexToRemove=self.conditionSet.indexOf(conditionToRemove[0]);return indexToRemove>-1&&self.conditionSet.splice(indexToRemove,1),conditionToRemove[0]}function toJson(){var json={extents:self.extents,objectType:self.objectType,name:self.name,origin:self.origin,destination:self.destination,index:self.index};if(self.conditionSet){json.conditionSet={};for(var conditionName in self.conditionSet)json.conditionSet[conditionName]=self.conditionSet[conditionName].toJson()}return JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents="StudioObject",self.objectType="Route",self.origin=routeOrigin,self.destination=routeDestination,self.conditionSet=[],self.name=routeName,self.getConditionSet=getConditionSet,self.addCondition=addCondition,self.removeCondition=removeCondition,self.getConditionSetSize=getConditionSetSize,self.toJson=toJson}angular.module("otusjs.navigation").factory("RouteFactory",RouteFactory)}(),function(){"use strict";function RuleFactory(){function create(when,operator,answer){return new Rule(when,operator,answer)}var self=this;return self.create=create,self}function Rule(when,operator,answer){function within(arrayValues){defineAnswer("within",arrayValues)}function equal(value){defineAnswer("equal",value)}function greater(value){defineAnswer("greater",value)}function greaterEqual(value){defineAnswer("greaterEqual",value)}function lower(value){defineAnswer("lower",value)}function lowerEqual(value){defineAnswer("lowerEqual",value)}function between(start,end){Array.isArray(start)?defineAnswer("between",start):defineAnswer("between",[start,end])}function contains(value){defineAnswer("contains",value)}function defineAnswer(operator,value){answer={},answer[operator]=value}function toJson(){var json={when:when,operator:operator,answer:answer};return JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents="StudioObject",self.objectType="Rule",self.when=when,self.answer=answer,self.operator=operator,self.within=within,self.equal=equal,self.greater=greater,self.greaterEqual=greaterEqual,self.lower=lower,self.lowerEqual=lowerEqual,self.between=between,self.contains=contains,self.toJson=toJson}angular.module("otusjs.navigation").factory("RuleFactory",RuleFactory)}(),function(){"use strict";function NavigationAddService(NavigationContainerService,SurveyItemContainerService){function execute(){var itemCount=SurveyItemContainerService.getItemListSize();if(itemCount>1){var origin=SurveyItemContainerService.getItemByPosition(itemCount-2),destination=SurveyItemContainerService.getItemByPosition(itemCount-1);NavigationContainerService.createNavigationTo(origin.templateID,destination.templateID)}}var self=this;self.execute=execute}angular.module("otusjs.navigation").service("NavigationAddService",NavigationAddService),NavigationAddService.$inject=["NavigationContainerService","SurveyItemContainerService"]}(),function(){"use strict";function NavigationContainerService(NavigationFactory){function init(){navigationList=[]}function manageNavigation(navigationToManage){navigationList=navigationToManage}function getNavigationList(){return navigationList}function getNavigationListSize(){return navigationList.length}function getNavigationByOrigin(origin){var filter=navigationList.filter(function(navigation){return findByOrigin(navigation,origin)});return filter[0]}function getNavigationByPosition(position){return navigationList[position]}function getNavigationPosition(origin){var navigation=getNavigationByOrigin(origin);return navigation?navigationList.indexOf(navigation):null}function existsNavigationTo(origin){return!!getNavigationByOrigin(origin)}function createNavigationTo(origin,destination){navigationList.push(NavigationFactory.create(origin,destination))}function removeNavigationOf(questionID){var navigationToRemove=navigationList.filter(function(navigation){return findByOrigin(navigation,questionID)}),indexToRemove=navigationList.indexOf(navigationToRemove[0]);indexToRemove>-1&&navigationList.splice(indexToRemove,1)}function removeNavigationByIndex(indexToRemove){navigationList.splice(indexToRemove,1)}function removeCurrentLastNavigation(){navigationList.splice(-1,1)}function findByOrigin(navigation,questionID){return navigation.origin===questionID}var self=this,navigationList=[];self.init=init,self.manageNavigation=manageNavigation,self.getNavigationByOrigin=getNavigationByOrigin,self.getNavigationByPosition=getNavigationByPosition,self.getNavigationPosition=getNavigationPosition,self.getNavigationList=getNavigationList,self.getNavigationListSize=getNavigationListSize,self.existsNavigationTo=existsNavigationTo,self.createNavigationTo=createNavigationTo,self.removeNavigationOf=removeNavigationOf,self.removeNavigationByIndex=removeNavigationByIndex,self.removeCurrentLastNavigation=removeCurrentLastNavigation}angular.module("otusjs.navigation").service("NavigationContainerService",NavigationContainerService),NavigationContainerService.$inject=["NavigationFactory"]}(),function(){"use strict";function NavigationManagerService(NavigationContainerService,NavigationAddService,NavigationRemoveService){function init(){NavigationContainerService.init()}function getNavigationList(){return NavigationContainerService.getNavigationList()}function getNavigationByOrigin(origin){return NavigationContainerService.getNavigationByOrigin(origin)}function addNavigation(){NavigationAddService.execute()}function removeNavigation(templateID){NavigationRemoveService.execute(templateID)}var self=this;self.init=init,self.getNavigationList=getNavigationList,self.getNavigationByOrigin=getNavigationByOrigin,self.addNavigation=addNavigation,self.removeNavigation=removeNavigation}angular.module("otusjs.navigation").service("NavigationManagerService",NavigationManagerService),NavigationManagerService.$inject=["NavigationContainerService","NavigationAddService","NavigationRemoveService"]}(),function(){"use strict";function NavigationRemoveService(NavigationContainerService){function execute(templateID){if(NavigationContainerService.existsNavigationTo(templateID)){var navigationToRecicle=NavigationContainerService.getNavigationByOrigin(templateID),positionToRecicle=NavigationContainerService.getNavigationPosition(templateID);if(positionToRecicle&&0!==positionToRecicle){var navigationToUpdate=NavigationContainerService.getNavigationByPosition(positionToRecicle-1);navigationToUpdate.routes[0].destination=navigationToRecicle.routes[0].destination}NavigationContainerService.removeNavigationOf(templateID)}else NavigationContainerService.removeCurrentLastNavigation()}var self=this;self.execute=execute}angular.module("otusjs.navigation").service("NavigationRemoveService",NavigationRemoveService),NavigationRemoveService.$inject=["NavigationContainerService"]}(),function(){"use strict";function SurveyFactory(SurveyIdentityFactory,SurveyMetaInfoFactory,SurveyUUIDGenerator,NavigationManagerService,SurveyItemManagerService){function load(surveyTemplateJson){var metainfo=SurveyMetaInfoFactory.load(surveyTemplateJson.metainfo),identity=SurveyIdentityFactory.load(surveyTemplateJson.identity),UUID=surveyTemplateJson.oid;return new Survey(metainfo,identity,UUID,NavigationManagerService,SurveyItemManagerService)}function create(name,acronym){var metainfo=SurveyMetaInfoFactory.create(),identity=SurveyIdentityFactory.create(name,acronym),UUID=SurveyUUIDGenerator.generateSurveyUUID();return new Survey(metainfo,identity,UUID,NavigationManagerService,SurveyItemManagerService)}var self=this;return self.create=create,self.load=load,self}function Survey(surveyMetainfo,surveyIdentity,uuid,NavigationManagerService,SurveyItemManagerService){function getItemByTemplateID(templateID){return self.SurveyItemManager.getItemByTemplateID(templateID)}function addItem(type){var item=self.SurveyItemManager.addItem(type,self.identity.acronym);return self.NavigationManager.addNavigation(),item}function removeItem(templateID){self.SurveyItemManager.removeItem(templateID),self.NavigationManager.removeNavigation(templateID)}function updateItem(item){self.navigationList[item.templateID]=item}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.oid=self.oid,json.identity=self.identity.toJson(),json.metainfo=self.metainfo.toJson(),json.itemContainer=[],self.SurveyItemManager.getItemList().forEach(function(item){json.itemContainer.push(item.toJson())}),json.navigationList=[],NavigationManagerService.getNavigationList().forEach(function(navigation){json.navigationList.push(navigation.toJson())}),JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"").replace(/ ":/g,'":')}var self=this;self.extents="StudioObject",self.objectType="Survey",self.oid=uuid,self.identity=surveyIdentity,self.metainfo=surveyMetainfo,self.SurveyItemManager=SurveyItemManagerService,self.NavigationManager=NavigationManagerService,self.NavigationManager.init(),self.SurveyItemManager.init(),self.getItemByTemplateID=getItemByTemplateID,self.addItem=addItem,self.addItem=addItem,self.removeItem=removeItem,self.updateItem=updateItem,self.toJson=toJson}angular.module("otusjs.survey").factory("SurveyFactory",SurveyFactory),SurveyFactory.$inject=["SurveyIdentityFactory","SurveyMetaInfoFactory","SurveyUUIDGenerator","NavigationManagerService","SurveyItemManagerService"]}(),function(){"use strict";function SurveyIdentityFactory(){function load(surveyIdentityJson){return new SurveyIdentity(surveyIdentityJson.name,surveyIdentityJson.acronym,surveyIdentityJson.version)}function create(name,acronym,version){return new SurveyIdentity(name,acronym,version)}var self=this;return self.create=create,self.load=load,self}function SurveyIdentity(name,acronym){function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.name=self.name,json.acronym=self.acronym,json.recommendedTo=self.recommendedTo,json.description=self.description,json.keywords=self.keywords,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents="StudioObject",self.objectType="SurveyIdentity",self.name=name,self.acronym=acronym,self.recommendedTo="",self.description="",self.keywords=[],self.toJson=toJson}angular.module("otusjs.survey").factory("SurveyIdentityFactory",SurveyIdentityFactory)}(),function(){"use strict";function SurveyMetaInfoFactory(){function load(surveyMetaInfoJson){return new SurveyMetaInfo(surveyMetaInfoJson.creationDatetime)}function create(){var now=Date.now();return new SurveyMetaInfo(now)}var self=this;return self.create=create,self.load=load,self}function SurveyMetaInfo(creationDatetime){function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.creationDatetime=self.creationDatetime,json.otusStudioVersion=self.otusStudioVersion,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents="StudioObject",self.objectType="SurveyMetaInfo",self.creationDatetime=creationDatetime,self.otusStudioVersion="",self.toJson=toJson}angular.module("otusjs.survey").factory("SurveyMetaInfoFactory",SurveyMetaInfoFactory)}(),function(){"use strict";function SurveyItemFactory(CalendarQuestionFactory,IntegerQuestionFactory,DecimalQuestionFactory,SingleSelectionQuestionFactory,CheckboxQuestionFactory,TextQuestionFactory,TimeQuestionFactory,EmailQuestionFactory,PhoneQuestionFactory,TextItemFactory,ImageItemFactory){function create(itemType,templateID){var item=new SurveyItem(templateID);return factoryMap[itemType].create(templateID,item)}var self=this,factoryMap={CalendarQuestion:CalendarQuestionFactory,IntegerQuestion:IntegerQuestionFactory,DecimalQuestion:DecimalQuestionFactory,SingleSelectionQuestion:SingleSelectionQuestionFactory,CheckboxQuestion:CheckboxQuestionFactory,TextQuestion:TextQuestionFactory,TimeQuestion:TimeQuestionFactory,EmailQuestion:EmailQuestionFactory,PhoneQuestion:PhoneQuestionFactory,TextItem:TextItemFactory,ImageItem:ImageItemFactory};return self.create=create,self}function SurveyItem(templateID){var self=this;self.extents="StudioObject",self.objectType="SurveyItem",self.templateID=templateID}angular.module("otusjs.surveyItem").factory("SurveyItemFactory",SurveyItemFactory),SurveyItemFactory.$inject=["CalendarQuestionFactory","IntegerQuestionFactory","DecimalQuestionFactory","SingleSelectionQuestionFactory","CheckboxQuestionFactory","TextQuestionFactory","TimeQuestionFactory","EmailQuestionFactory","PhoneQuestionFactory","TextItemFactory","ImageItemFactory"]}(),function(){"use strict";function SurveyItemContainerService(SurveyItemFactory){function init(){itemList=[]}function manageItems(itemsToManage){itemList=itemsToManage}function getItemList(){return itemList}function getItemListSize(){return itemList.length}function getItemByTemplateID(templateID){var filter=itemList.filter(function(item){return findByTemplateID(item,templateID)});return filter[0]}function getItemByPosition(position){return itemList[position]}function getItemPosition(templateID){var item=getItemByTemplateID(templateID);return item?itemList.indexOf(item):null}function existsItem(templateID){return!!getItemByTemplateID(templateID)}function createItem(itemType,templateID){var item=SurveyItemFactory.create(itemType,templateID);return itemList.push(item),item}function removeItem(templateID){var itemToRemove=itemList.filter(function(item){return findByTemplateID(item,templateID)}),indexToRemove=itemList.indexOf(itemToRemove[0]);indexToRemove>-1&&itemList.splice(indexToRemove,1)}function removeItemByPosition(indexToRemove){itemList.splice(indexToRemove,1)}function removeCurrentLastItem(){itemList.splice(-1,1)}function findByTemplateID(item,templateID){return item.templateID===templateID}var self=this,itemList=[];self.init=init,self.manageItems=manageItems,self.getItemByTemplateID=getItemByTemplateID,self.getItemByPosition=getItemByPosition,self.getItemPosition=getItemPosition,self.getItemList=getItemList,self.getItemListSize=getItemListSize,self.existsItem=existsItem,self.createItem=createItem,self.removeItem=removeItem,self.removeItemByPosition=removeItemByPosition,self.removeCurrentLastItem=removeCurrentLastItem}angular.module("otusjs.surveyItem").service("SurveyItemContainerService",SurveyItemContainerService),SurveyItemContainerService.$inject=["SurveyItemFactory"]}(),function(){"use strict";function SurveyItemManagerService(SurveyItemContainerService){function init(){SurveyItemContainerService.init(),incrementalIDValue=0}function getItemList(){return SurveyItemContainerService.getItemList()}function getItemListSize(){return SurveyItemContainerService.getItemListSize()}function getItemByTemplateID(templateID){return SurveyItemContainerService.getItemByTemplateID(templateID)}function addItem(itemType,templateIDPrefix){var templateID=templateIDPrefix+getNextIncrementalGenerator(),item=SurveyItemContainerService.createItem(itemType,templateID);return item}function removeItem(templateID){SurveyItemContainerService.removeItem(templateID)}function getNextIncrementalGenerator(){return++incrementalIDValue}var self=this,incrementalIDValue=0;self.init=init,self.getItemList=getItemList,self.getItemListSize=getItemListSize,self.getItemByTemplateID=getItemByTemplateID,self.addItem=addItem,self.removeItem=removeItem}angular.module("otusjs.surveyItem").service("SurveyItemManagerService",SurveyItemManagerService),SurveyItemManagerService.$inject=["SurveyItemContainerService"]}(),function(){"use strict";function ImageItemFactory(LabelFactory){function create(templateID,prototype){return new ImageItem(templateID,prototype,LabelFactory)}var self=this;return self.create=create,self}function ImageItem(templateID,prototype,LabelFactory){function isQuestion(){return!1}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.templateID=self.templateID,json.dataType=self.dataType,json.url=self.url,json.footer=self.footer,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents=prototype.objectType,self.objectType="ImageItem",self.templateID=templateID,self.dataType="String",self.url="",self.footer={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()},self.isQuestion=isQuestion,self.toJson=toJson}angular.module("otusjs.surveyItem").factory("ImageItemFactory",ImageItemFactory),ImageItemFactory.$inject=["LabelFactory"]}(),function(){"use strict";function TextItemFactory(LabelFactory){function create(templateID,prototype){return new TextItem(templateID,prototype,LabelFactory)}var self=this;return self.create=create,self}function TextItem(templateID,prototype,LabelFactory){function isQuestion(){return!1}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.templateID=self.templateID,json.dataType=self.dataType,json.value=self.value,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents=prototype.objectType,self.objectType="TextItem",self.templateID=templateID,self.dataType="String",self.value={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()},self.isQuestion=isQuestion,self.toJson=toJson}angular.module("otusjs.surveyItem").factory("TextItemFactory",TextItemFactory),TextItemFactory.$inject=["LabelFactory"]}(),function(){"use strict";function AnswerOptionFactory(LabelFactory){function create(value,parentQuestionID){return new AnswerOption(value,parentQuestionID,LabelFactory)}var self=this;return self.create=create,self}function AnswerOption(value,parentQuestionID,LabelFactory){function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.value=self.value,json.dataType=self.dataType,json.label=self.label,json.metadata=self.metadata,json.parentQuestionID=self.parentQuestionID,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents="StudioObject",self.objectType="AnswerOption",self.value=value,self.dataType="Integer",self.label={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()},self.parentQuestionID=parentQuestionID,self.toJson=toJson}angular.module("otusjs.surveyItem").factory("AnswerOptionFactory",AnswerOptionFactory),AnswerOptionFactory.$inject=["LabelFactory"]}(),function(){"use strict";function CalendarQuestionFactory(LabelFactory,MetadataGroupFactory){function create(templateID,prototype){return new CalendarQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory)}var self=this;return self.create=create,self}function CalendarQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory){function isQuestion(){return!0}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.templateID=self.templateID,json.dataType=self.dataType,json.label=self.label,json.metadata=self.metadata,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"");
}var self=this;self.extents=prototype.objectType,self.objectType="CalendarQuestion",self.templateID=templateID,self.dataType="LocalDate",self.label={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()},self.metadata=MetadataGroupFactory.create(),self.isQuestion=isQuestion,self.toJson=toJson}angular.module("otusjs.surveyItem").factory("CalendarQuestionFactory",CalendarQuestionFactory),CalendarQuestionFactory.$inject=["LabelFactory","MetadataGroupFactory"]}(),function(){"use strict";function CheckboxQuestionFactory(LabelFactory,MetadataGroupFactory,AnswerOptionFactory){function create(templateID,prototype){return new CheckboxQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,AnswerOptionFactory)}var self=this;return self.create=create,self}function CheckboxQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,AnswerOptionFactory){function getOptionListSize(){return self.options.length}function getOptionByValue(value){return self.options[value-1]}function isQuestion(){return!0}function createOption(){var option=AnswerOptionFactory.create(self.options.length+1);return self.options.push(option),option}function removeOption(value){self.options.splice(value-1,1),reorderOptionValues()}function removeLastOption(){self.options.splice(-1,1)}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.templateID=self.templateID,json.dataType=self.dataType,json.label=self.label,json.options=self.options,json.metadata=self.metadata,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}function reorderOptionValues(){self.options.forEach(function(option,index){option.value=++index})}var self=this;self.extents=prototype.objectType,self.objectType="CheckboxQuestion",self.templateID=templateID,self.dataType="Integer",self.label={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()},self.metadata=MetadataGroupFactory.create(),self.options=[],self.getOptionListSize=getOptionListSize,self.getOptionByValue=getOptionByValue,self.createOption=createOption,self.removeOption=removeOption,self.removeLastOption=removeLastOption,self.isQuestion=isQuestion,self.toJson=toJson}angular.module("otusjs.surveyItem").factory("CheckboxQuestionFactory",CheckboxQuestionFactory),CheckboxQuestionFactory.$inject=["LabelFactory","MetadataGroupFactory","AnswerOptionFactory"]}(),function(){"use strict";function DecimalQuestionFactory(LabelFactory,MetadataGroupFactory,UnitFactory){function create(templateID,prototype){return new DecimalQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,UnitFactory)}var self=this;return self.create=create,self}function DecimalQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,UnitFactory){function isQuestion(){return!0}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.templateID=self.templateID,json.dataType=self.dataType,json.label=self.label,json.metadata=self.metadata,json.unit=self.unit,JSON.stringify(json)}var self=this;self.extents=prototype.objectType,self.objectType="DecimalQuestion",self.templateID=templateID,self.dataType="Decimal",self.label={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()},self.metadata=MetadataGroupFactory.create(),self.unit={ptBR:UnitFactory.create(),enUS:UnitFactory.create(),esES:UnitFactory.create()},self.isQuestion=isQuestion,self.toJson=toJson}angular.module("otusjs.surveyItem").factory("DecimalQuestionFactory",DecimalQuestionFactory),DecimalQuestionFactory.$inject=["LabelFactory","MetadataGroupFactory","UnitFactory"]}(),function(){"use strict";function EmailQuestionFactory(LabelFactory,MetadataGroupFactory){function create(templateID,prototype){return new EmailQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory)}var self=this;return self.create=create,self}function EmailQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory){function isQuestion(){return!0}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.templateID=self.templateID,json.dataType=self.dataType,json.label=self.label,json.metadata=self.metadata,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents=prototype.objectType,self.objectType="EmailQuestion",self.templateID=templateID,self.dataType="String",self.label={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()},self.metadata=MetadataGroupFactory.create(),self.isQuestion=isQuestion,self.toJson=toJson}angular.module("otusjs.surveyItem").factory("EmailQuestionFactory",EmailQuestionFactory),EmailQuestionFactory.$inject=["LabelFactory","MetadataGroupFactory"]}(),function(){"use strict";function IntegerQuestionFactory(LabelFactory,MetadataGroupFactory,UnitFactory){function create(templateID,prototype){return new IntegerQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,UnitFactory)}var self=this;return self.create=create,self}function IntegerQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,UnitFactory){function isQuestion(){return!0}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.templateID=self.templateID,json.dataType=self.dataType,json.label=self.label,json.metadata=self.metadata,json.unit=self.unit,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents=prototype.objectType,self.objectType="IntegerQuestion",self.templateID=templateID,self.dataType="Integer",self.label={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()},self.metadata=MetadataGroupFactory.create(),self.unit={ptBR:UnitFactory.create(),enUS:UnitFactory.create(),esES:UnitFactory.create()},self.isQuestion=isQuestion,self.toJson=toJson}angular.module("otusjs.surveyItem").factory("IntegerQuestionFactory",IntegerQuestionFactory),IntegerQuestionFactory.$inject=["LabelFactory","MetadataGroupFactory","UnitFactory"]}(),function(){"use strict";function PhoneQuestionFactory(LabelFactory,MetadataGroupFactory){function create(templateID,prototype){return new PhoneQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory)}var self=this;return self.create=create,self}function PhoneQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory){function isQuestion(){return!0}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.templateID=self.templateID,json.dataType=self.dataType,json.label=self.label,json.metadata=self.metadata,json.unit=self.unit,JSON.stringify(json)}var self=this;self.extents=prototype.objectType,self.objectType="PhoneQuestion",self.templateID=templateID,self.dataType="Integer",self.label={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()},self.metadata=MetadataGroupFactory.create(),self.isQuestion=isQuestion,self.toJson=toJson}angular.module("otusjs.surveyItem").factory("PhoneQuestionFactory",PhoneQuestionFactory),PhoneQuestionFactory.$inject=["LabelFactory","MetadataGroupFactory"]}(),function(){"use strict";function SingleSelectionQuestionFactory(LabelFactory,MetadataGroupFactory,AnswerOptionFactory){function create(templateID,prototype){return new SingleSelectionQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,AnswerOptionFactory)}var self=this;return self.create=create,self}function SingleSelectionQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory,AnswerOptionFactory){function getOptionListSize(){return self.options.length}function getOptionByValue(value){return self.options[value-1]}function isQuestion(){return!0}function createOption(){var option=AnswerOptionFactory.create(self.options.length+1);return self.options.push(option),option}function removeOption(value){self.options.splice(value-1,1),reorderOptionValues()}function removeLastOption(){self.options.splice(-1,1)}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.templateID=self.templateID,json.dataType=self.dataType,json.label=self.label,json.options=self.options,json.metadata=self.metadata,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}function reorderOptionValues(){self.options.forEach(function(option,index){option.value=++index})}var self=this;self.extents=prototype.objectType,self.objectType="SingleSelectionQuestion",self.templateID=templateID,self.dataType="Integer",self.label={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()},self.metadata=MetadataGroupFactory.create(),self.options=[],self.getOptionListSize=getOptionListSize,self.getOptionByValue=getOptionByValue,self.createOption=createOption,self.removeOption=removeOption,self.removeLastOption=removeLastOption,self.isQuestion=isQuestion,self.toJson=toJson}angular.module("otusjs.surveyItem").factory("SingleSelectionQuestionFactory",SingleSelectionQuestionFactory),SingleSelectionQuestionFactory.$inject=["LabelFactory","MetadataGroupFactory","AnswerOptionFactory"]}(),function(){"use strict";function TextQuestionFactory(LabelFactory,MetadataGroupFactory){function create(templateID,prototype){return new TextQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory)}var self=this;return self.create=create,self}function TextQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory){function isQuestion(){return!0}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.templateID=self.templateID,json.dataType=self.dataType,json.label=self.label,json.metadata=self.metadata,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents=prototype.objectType,self.objectType="TextQuestion",self.templateID=templateID,self.dataType="String",self.label={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()},self.metadata=MetadataGroupFactory.create(),self.isQuestion=isQuestion,self.toJson=toJson}angular.module("otusjs.surveyItem").factory("TextQuestionFactory",TextQuestionFactory),TextQuestionFactory.$inject=["LabelFactory","MetadataGroupFactory"]}(),function(){"use strict";function TimeQuestionFactory(LabelFactory,MetadataGroupFactory){function create(templateID,prototype){return new TimeQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory)}var self=this;return self.create=create,self}function TimeQuestion(templateID,prototype,LabelFactory,MetadataGroupFactory){function isQuestion(){return!0}function toJson(){var json={};return json.extents=self.extents,json.objectType=self.objectType,json.templateID=self.templateID,json.dataType=self.dataType,json.label=self.label,json.metadata=self.metadata,JSON.stringify(json).replace(/"{/g,"{").replace(/\}"/g,"}").replace(/\\/g,"")}var self=this;self.extents=prototype.objectType,self.objectType="TimeQuestion",self.templateID=templateID,self.dataType="LocalTime",self.label={ptBR:LabelFactory.create(),enUS:LabelFactory.create(),esES:LabelFactory.create()},self.metadata=MetadataGroupFactory.create(),self.isQuestion=isQuestion,self.toJson=toJson}angular.module("otusjs.surveyItem").factory("TimeQuestionFactory",TimeQuestionFactory),TimeQuestionFactory.$inject=["LabelFactory","MetadataGroupFactory"]}();