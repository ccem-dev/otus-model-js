!function(){"use strict";angular.module("utils",[])}(),function(){"use strict";function JsonClonerService(){function clone(original){var clone={};if(Array.isArray(original)||original instanceof Function)return original;if(original instanceof Object){var propertyNames=Object.getOwnPropertyNames(original);return propertyNames.forEach(function(propertyName){var property=original[propertyName];if(property instanceof Function){var formattedName="";if(/^get/.test(propertyName)){var fl=propertyName.substring(3,4).toLowerCase();formattedName=fl+propertyName.substring(4);var value=property();if(Array.isArray(value)){var aray=[];value.forEach(function(el){var subEl=self.clone(el);aray.push(subEl)}),clone[formattedName]=aray}else if(value instanceof Object){var subObj=self.clone(value);clone[formattedName]=subObj}else clone[formattedName]=value}}else clone[propertyName]=original[propertyName]}),JSON.stringify(clone).replace(/\\/g,"").replace(/"{/g,"{").replace(/\}"/g,"}")}return original}var self=this;self.clone=clone}angular.module("utils").service("JsonClonerService",JsonClonerService)}(),function(){"use strict";function ClonerService(){function clone(original){var clone={};for(var property in original)clone[property]=original[property];return clone}var self=this;self.clone=clone}angular.module("utils").service("ClonerService",ClonerService)}(),function(){"use strict";function StringNormalizer(){function normalizeString(directiveName){for(var tokenSeparator=directiveName.indexOf("-")!=-1?"-":".",directiveParts=directiveName.split(tokenSeparator),loopSize=directiveParts.length,normalizedString=directiveParts[0].toLowerCase(),i=1;i<loopSize;i++){var firstLetter=directiveParts[i].slice(0,1),restOfString=directiveParts[i].slice(1);normalizedString=normalizedString.concat(firstLetter.toUpperCase().concat(restOfString.toLowerCase()))}return normalizedString}var self=this;self.normalizeString=normalizeString}angular.module("utils").service("StringNormalizer",StringNormalizer)}(),function(){"use strict";function SurveyUUIDGenerator($window,UUIDService){function generateSurveyUUID(){var userUUID="userUUID:["+$window.sessionStorage.userUUID+"]",surveyUUID="surveyUUID:["+UUIDService.generateUUID()+"]",repositoryUUID="repositoryUUID:[ Not done yet ]";return Base64.encode(userUUID+surveyUUID+repositoryUUID)}var self=this;self.generateSurveyUUID=generateSurveyUUID}angular.module("utils").service("SurveyUUIDGenerator",SurveyUUIDGenerator),SurveyUUIDGenerator.$inject=["$window","UUIDService"]}(),function(){"use strict";function UUIDService(){function generateUUID(){return uuid.v1()}var self=this;self.generateUUID=generateUUID}angular.module("utils").service("UUIDService",UUIDService)}();